###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        11/May/2016  19:10:53
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\ImgProcess.c
#    Command line =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\ImgProcess.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\
#        -lB
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\
#        -o
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\app\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\app\Source\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\CPU\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\common\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\HW\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\FatFs\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\FatFs\option\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\common\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\driver\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\descriptor\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\ImgProcess.lst
#    Object file  =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\Obj\ImgProcess.o
#
###############################################################################

E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\ImgProcess.c
      1          /*
      2          *This head file for image processing
      3          *include edge extacting
      4          *include
      5          */
      6          //#include "common.h"
      7          #include "ImgProcess.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable5  ;; 0xe000e100
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0x0940             LSRS     R0,R0,#+5
   \   00000010   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000014   0x4770             BX       LR               ;; return
      8          #include "Eagle_ov7725.h"
      9          #include "Oled.h"
     10          
     11          uint8 Bef_Scan(uint8*);
     12          void TwinLine_Deal(uint8 *,int8);
     13          void Get_MidAve(uint8 * ,float32 ,float32 ,float32 ,float32);
     14          

   \                                 In section .bss, align 4
     15          PIC_DateStruct PIC_DateBlock;
   \                     PIC_DateBlock:
   \   00000000                      DS8 6604

   \                                 In section .bss, align 4
     16          LeftFlag_Struct LeftFlag_Switch;
   \                     LeftFlag_Switch:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     17          RightFlag_Struct RightFlag_Switch;
   \                     RightFlag_Switch:
   \   00000000                      DS8 8
     18          

   \                                 In section .bss, align 2
     19          int16 MidAve = 0;
   \                     MidAve:
   \   00000000                      DS8 2
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void Get_MidLine(void)
     22          {
   \                     Get_MidLine: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
     23          	uint8 i,j,k;
     24          	int8 Row;
     25          	img_extract(img,imgbuff,CAMERA_SIZE);       //ÂõæÂÉèËß£Âéã
   \   00000004   0xF44F 0x6216      MOV      R2,#+2400
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000010   0x.... 0x....      BL       img_extract
     26          	for(k = 0,i = 1; i < CAMERA_H; i += 3 , k++)          //ÈöîË°åÊèêÂèñ
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0xE015             B.N      ??Get_MidLine_0
     27          	{
     28          		for(j = 0; j < CAMERA_W; j++)
     29          		{
     30          			PIC_DateBlock.pic[CAMERA_W * k + j] = img[i * CAMERA_W + j];
   \                     ??Get_MidLine_1: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000001E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000020   0x24A0             MOVS     R4,#+160
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0xFB04 0x1402      MLA      R4,R4,R2,R1
   \   00000028   0x.... 0x....      LDR.W    R5,??DataTable5_2
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x26A0             MOVS     R6,#+160
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0xFB06 0x1600      MLA      R6,R6,R0,R1
   \   00000036   0x5D75             LDRB     R5,[R6, R5]
   \   00000038   0x54E5             STRB     R5,[R4, R3]
     31          		}
   \   0000003A   0x1C49             ADDS     R1,R1,#+1
   \                     ??Get_MidLine_2: (+1)
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x29A0             CMP      R1,#+160
   \   00000040   0xDBEB             BLT.N    ??Get_MidLine_1
   \   00000042   0x1CC0             ADDS     R0,R0,#+3
   \   00000044   0x1C52             ADDS     R2,R2,#+1
   \                     ??Get_MidLine_0: (+1)
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x2878             CMP      R0,#+120
   \   0000004A   0xDA01             BGE.N    ??Get_MidLine_3
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0xE7F5             B.N      ??Get_MidLine_2
     32          	}
     33          
     34          	for(Row = Bef_Scan(PIC_DateBlock.pic);Row >= 0;Row--)
   \                     ??Get_MidLine_3: (+1)
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000054   0x.... 0x....      BL       Bef_Scan
   \   00000058   0x0004             MOVS     R4,R0
   \   0000005A   0xE000             B.N      ??Get_MidLine_4
   \                     ??Get_MidLine_5: (+1)
   \   0000005C   0x1E64             SUBS     R4,R4,#+1
   \                     ??Get_MidLine_4: (+1)
   \   0000005E   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   00000060   0x2C00             CMP      R4,#+0
   \   00000062   0xF100 0x808E      BMI.W    ??Get_MidLine_6
     35          	{
     36          		/*SingleLine_Deal(Row);
     37          		if(SingleModle_Flag)
     38          		{
     39          
     40          		}*/
     41          		TwinLine_Deal(PIC_DateBlock.pic,Row);
   \   00000066   0x0021             MOVS     R1,R4
   \   00000068   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   0000006E   0x.... 0x....      BL       TwinLine_Deal
     42          		if(LeftFlag_Switch.LeftLost == 0  && RightFlag_Switch.RightWhiteLost == 1)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000076   0x7880             LDRB     R0,[R0, #+2]
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000007C   0x7849             LDRB     R1,[R1, #+1]
   \   0000007E   0xF091 0x0101      EORS     R1,R1,#0x1
   \   00000082   0x4308             ORRS     R0,R1,R0
   \   00000084   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD11F             BNE.N    ??Get_MidLine_7
     43          		{
     44          			(++RightFlag_Switch.RightTurn >= 10)  ? 	\
     45          				(RightFlag_Switch.RightTurnFlag = 1) : 	\
     46          				(LeftFlag_Switch.LeftTurn = 0 , LeftFlag_Switch.LeftTurnFlag = 0);
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000008E   0x78C0             LDRB     R0,[R0, #+3]
   \   00000090   0x1C40             ADDS     R0,R0,#+1
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000096   0x70C8             STRB     R0,[R1, #+3]
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000009C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000009E   0x280A             CMP      R0,#+10
   \   000000A0   0xDB07             BLT.N    ??Get_MidLine_8
   \   000000A2   0x2001             MOVS     R0,#+1
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000000A8   0x7108             STRB     R0,[R1, #+4]
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   000000AE   0x7900             LDRB     R0,[R0, #+4]
   \   000000B0   0xE034             B.N      ??Get_MidLine_9
   \                     ??Get_MidLine_8: (+1)
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000000B8   0x70C8             STRB     R0,[R1, #+3]
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000000C0   0x7108             STRB     R0,[R1, #+4]
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000C6   0x7900             LDRB     R0,[R0, #+4]
   \   000000C8   0xE028             B.N      ??Get_MidLine_9
     47          		}
     48          		else if(LeftFlag_Switch.LeftWhiteLost == 1 && RightFlag_Switch.RightLost == 0)
   \                     ??Get_MidLine_7: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000CE   0x7840             LDRB     R0,[R0, #+1]
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000000D4   0x7889             LDRB     R1,[R1, #+2]
   \   000000D6   0xF091 0x0101      EORS     R1,R1,#0x1
   \   000000DA   0x4208             TST      R0,R1
   \   000000DC   0xD01E             BEQ.N    ??Get_MidLine_9
     49          		{
     50          			(++LeftFlag_Switch.LeftTurn >= 10) ?		\
     51          				(LeftFlag_Switch.LeftTurnFlag = 1) :	\
     52          				(RightFlag_Switch.RightTurn = 0 , RightFlag_Switch.RightTurnFlag = 0);
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000E2   0x78C0             LDRB     R0,[R0, #+3]
   \   000000E4   0x1C40             ADDS     R0,R0,#+1
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000000EA   0x70C8             STRB     R0,[R1, #+3]
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000F0   0x78C0             LDRB     R0,[R0, #+3]
   \   000000F2   0x280A             CMP      R0,#+10
   \   000000F4   0xDB07             BLT.N    ??Get_MidLine_10
   \   000000F6   0x2001             MOVS     R0,#+1
   \   000000F8   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000000FC   0x7108             STRB     R0,[R1, #+4]
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000102   0x7900             LDRB     R0,[R0, #+4]
   \   00000104   0xE00A             B.N      ??Get_MidLine_9
   \                     ??Get_MidLine_10: (+1)
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000010C   0x70C8             STRB     R0,[R1, #+3]
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000114   0x7108             STRB     R0,[R1, #+4]
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000011A   0x7900             LDRB     R0,[R0, #+4]
     53          		}
     54          		if(LeftFlag_Switch.LeftTurnFlag || RightFlag_Switch.RightTurnFlag)
   \                     ??Get_MidLine_9: (+1)
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000120   0x7900             LDRB     R0,[R0, #+4]
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000126   0x7909             LDRB     R1,[R1, #+4]
   \   00000128   0x4308             ORRS     R0,R1,R0
   \   0000012A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD095             BEQ.N    ??Get_MidLine_5
     55          		{
     56          			if(LeftFlag_Switch.LeftBlackLost&& RightFlag_Switch.RightBlackLost)
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000134   0x7800             LDRB     R0,[R0, #+0]
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000013A   0x7809             LDRB     R1,[R1, #+0]
   \   0000013C   0x4208             TST      R0,R1
   \   0000013E   0xD08D             BEQ.N    ??Get_MidLine_5
     57          				break;
   \   00000140   0xE01F             B.N      ??Get_MidLine_6
     58          		}
     59          	}
     60          	for(;Row >= 0;Row--)
     61          	{
     62          		if(LeftFlag_Switch.LeftTurnFlag)
     63          		{
     64          			PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row] = 1;
     65          			PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] = 1;
     66          			PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] = 1;
     67          		}
     68          		else if(RightFlag_Switch.RightTurnFlag)
   \                     ??Get_MidLine_11: (+1)
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000146   0x7900             LDRB     R0,[R0, #+4]
   \   00000148   0x2800             CMP      R0,#+0
   \   0000014A   0xD019             BEQ.N    ??Get_MidLine_12
     69          		{
     70          			PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row] = PICTURE_W - 2;
   \   0000014C   0x209E             MOVS     R0,#+158
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000152   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   00000154   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   00000158   0xF511 0x51C8      ADDS     R1,R1,#+6400
   \   0000015C   0x8008             STRH     R0,[R1, #+0]
     71          			PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] = PICTURE_W - 2;
   \   0000015E   0x209E             MOVS     R0,#+158
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000164   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   00000166   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   0000016A   0xF641 0x1250      MOVW     R2,#+6480
   \   0000016E   0x5250             STRH     R0,[R2, R1]
     72          			PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] = PICTURE_W - 2;
   \   00000170   0x209E             MOVS     R0,#+158
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000176   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   00000178   0x1861             ADDS     R1,R4,R1
   \   0000017A   0xF511 0x51CD      ADDS     R1,R1,#+6560
   \   0000017E   0x7008             STRB     R0,[R1, #+0]
     73          		}
   \                     ??Get_MidLine_12: (+1)
   \   00000180   0x1E64             SUBS     R4,R4,#+1
   \                     ??Get_MidLine_6: (+1)
   \   00000182   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   00000184   0x2C00             CMP      R4,#+0
   \   00000186   0xD41F             BMI.N    ??Get_MidLine_13
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   0000018C   0x7900             LDRB     R0,[R0, #+4]
   \   0000018E   0x2800             CMP      R0,#+0
   \   00000190   0xD0D7             BEQ.N    ??Get_MidLine_11
   \   00000192   0x2001             MOVS     R0,#+1
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000198   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   0000019A   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   0000019E   0xF511 0x51C8      ADDS     R1,R1,#+6400
   \   000001A2   0x8008             STRH     R0,[R1, #+0]
   \   000001A4   0x2001             MOVS     R0,#+1
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   000001AA   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000001AC   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   000001B0   0xF641 0x1250      MOVW     R2,#+6480
   \   000001B4   0x5250             STRH     R0,[R2, R1]
   \   000001B6   0x2001             MOVS     R0,#+1
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   000001BC   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000001BE   0x1861             ADDS     R1,R4,R1
   \   000001C0   0xF511 0x51CD      ADDS     R1,R1,#+6560
   \   000001C4   0x7008             STRB     R0,[R1, #+0]
   \   000001C6   0xE7DB             B.N      ??Get_MidLine_12
     74          	}
     75          	LeftFlag_Switch.LeftTurn = 0;
   \                     ??Get_MidLine_13: (+1)
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000001CE   0x70C8             STRB     R0,[R1, #+3]
     76          	LeftFlag_Switch.LeftTurnFlag = 0;
   \   000001D0   0x2000             MOVS     R0,#+0
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000001D6   0x7108             STRB     R0,[R1, #+4]
     77          	RightFlag_Switch.RightTurn = 0;
   \   000001D8   0x2000             MOVS     R0,#+0
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000001DE   0x70C8             STRB     R0,[R1, #+3]
     78          	RightFlag_Switch.RightTurnFlag = 0;
   \   000001E0   0x2000             MOVS     R0,#+0
   \   000001E2   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000001E6   0x7108             STRB     R0,[R1, #+4]
     79          	Get_MidAve(PIC_DateBlock.TrackInf_DataBlock.MidLine  \
     80          		       , 0.01    \
     81          		       , 0.04    \
     82          		       , 0.03    \
     83          		       , 0.02);
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable5_6  ;; 0x3ca3d70a
   \   000001EC   0x9000             STR      R0,[SP, #+0]
   \   000001EE   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x3cf5c28f
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable5_8  ;; 0x3d23d70a
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable5_9  ;; 0x3c23d70a
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   000001FE   0x.... 0x....      BL       Get_MidAve
     84          }
   \   00000202   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
     85          

   \                                 In section .text, align 2, keep-with-next
     86          uint8 Bef_Scan(uint8 *pic_buff)
     87          {
   \                     Bef_Scan: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     88          	uint8 i;
     89          	int8 Row;
     90          	uint8 Black_Check = 0;
   \   00000002   0x2200             MOVS     R2,#+0
     91          	for(Row = PICTURE_H - 1;Row > PICTURE_H - 4;Row--)
   \   00000004   0x2127             MOVS     R1,#+39
   \   00000006   0xE001             B.N      ??Bef_Scan_0
     92          	{
     93          		if(White == *(pic_buff + Row * PICTURE_W + 1) &&\
     94          		   White == *(pic_buff + Row * PICTURE_W + 2))        //Â∑¶Á∫øÊâ´Êèè
     95          		{
     96          			PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row] = 2;
     97          			LeftFlag_Switch.LeftBlackLost = 0;
     98          			LeftFlag_Switch.LeftWhiteLost = 1;
     99          			LeftFlag_Switch.LeftLost = 1;
    100          		}
    101          		else
    102          		{
    103          			for(i = 4;i < PICTURE_W - 1;i++)
    104          			{
    105          				if(White == *(pic_buff + Row * PICTURE_W + i) && 		\
    106          				   White == *(pic_buff + Row * PICTURE_W + i - 1) && 	\
    107          				   Black == *(pic_buff + Row * PICTURE_W + i - 2) &&	\
    108          				   Black == *(pic_buff + Row * PICTURE_W + i - 3))
    109          				{
    110          					PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row] = i - 1;
    111          					break;
    112          				}
    113          			}
    114          			if(i == PICTURE_W - 1)
    115          			{
    116          				PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row] = 1;
    117          				LeftFlag_Switch.LeftBlackLost = 1;
    118          				LeftFlag_Switch.LeftWhiteLost = 0;
    119          				LeftFlag_Switch.LeftLost = 1;
    120          			}
    121          			else
    122          			{
    123          				LeftFlag_Switch.LeftBlackLost = 0;
    124          				LeftFlag_Switch.LeftWhiteLost = 0;
    125          				LeftFlag_Switch.LeftLost = 0;
    126          
    127          			}
    128          		}
    129          
    130          		if(White == *(pic_buff + Row * PICTURE_W + PICTURE_W - 2) && \
    131          		   White == *(pic_buff + Row * PICTURE_W + PICTURE_W - 3))      // Âè≥Á∫øÊâ´Êèè
    132          		{
    133          			PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] = PICTURE_W - 3;
    134          			RightFlag_Switch.RightBlackLost = 0;
    135          			RightFlag_Switch.RightWhiteLost = 1;
    136          			RightFlag_Switch.RightLost = 1;
    137          		}
    138          		else
    139          		{
    140          			for(i = PICTURE_W - 5;i > 0; i--)
    141          			{
    142          				if(White == *(pic_buff + Row * PICTURE_W + i)  &&		\
    143          				   White == *(pic_buff + Row * PICTURE_W + i + 1) &&	\
    144          				   Black == *(pic_buff + Row * PICTURE_W + i + 2) &&	\
    145          				   Black == *(pic_buff + Row * PICTURE_W + i + 3))
    146          				{
    147          					PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] = i + 1;
    148          					RightFlag_Switch.RightLost = 0;
    149          					break;
    150          				}
    151          			}
    152                      if(i == 0)
    153          			{
    154          				PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] = PICTURE_W - 3;
    155          				RightFlag_Switch.RightBlackLost = 1;
    156          				RightFlag_Switch.RightWhiteLost = 0;
    157          				RightFlag_Switch.RightLost = 1;
    158          			}
    159          			else
    160          			{
    161          				RightFlag_Switch.RightBlackLost = 0;
    162          				RightFlag_Switch.RightWhiteLost = 0;
    163          				RightFlag_Switch.RightLost = 0;
    164          			}
    165          
    166          		}
    167             		//Âè≥Á∫øÂú®Â∑¶Á∫øÁöÑÂ∑¶Ëæπ,ËÆæÁΩÆ‰∏∫Áº∫ÁúÅÂÄº
    168          		if(PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] < PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row])
    169          		{
    170          			PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row] = 2;
    171          			PIC_DateBlock.TrackInf_DataBlock.RightLine[Row] = 157;
    172          		}
    173          		//ËÆ°ÁÆóËµõÈÅìÂÆΩÂ∫¶Âíå‰∏≠Á∫øÂÄº
    174          		PIC_DateBlock.TrackInf_DataBlock.TrackWidth = PIC_DateBlock.TrackInf_DataBlock.RightLine[Row]     \
    175          		                                              - PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row];
    176          		PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] = (PIC_DateBlock.TrackInf_DataBlock.RightLine[Row]     \
    177          		                                                 + PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row]) / 2;
    178          		(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] >= 155) ? 	\
    179          			(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] = 155) : (NULL);
    180          		(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] <= 4) ?
    181          			(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row] = 4) : (NULL);
    182          		(LeftFlag_Switch.LeftBlackLost == 1 && RightFlag_Switch.RightBlackLost== 1) ?    \
    183          			(Black_Check++) : (NULL);
   \                     ??Bef_Scan_1: (+1)
   \   00000008   0x2300             MOVS     R3,#+0
   \                     ??Bef_Scan_2: (+1)
   \   0000000A   0x1E49             SUBS     R1,R1,#+1
   \                     ??Bef_Scan_0: (+1)
   \   0000000C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000000E   0x2925             CMP      R1,#+37
   \   00000010   0xF2C0 0x8198      BLT.W    ??Bef_Scan_3
   \   00000014   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000016   0x23A0             MOVS     R3,#+160
   \   00000018   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   0000001C   0x785B             LDRB     R3,[R3, #+1]
   \   0000001E   0x2BFF             CMP      R3,#+255
   \   00000020   0xD11C             BNE.N    ??Bef_Scan_4
   \   00000022   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000024   0x23A0             MOVS     R3,#+160
   \   00000026   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   0000002A   0x789B             LDRB     R3,[R3, #+2]
   \   0000002C   0x2BFF             CMP      R3,#+255
   \   0000002E   0xD115             BNE.N    ??Bef_Scan_4
   \   00000030   0x2302             MOVS     R3,#+2
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   00000036   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000038   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   0000003C   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   00000040   0x8023             STRH     R3,[R4, #+0]
   \   00000042   0x2300             MOVS     R3,#+0
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   00000048   0x7023             STRB     R3,[R4, #+0]
   \   0000004A   0x2301             MOVS     R3,#+1
   \   0000004C   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   00000050   0x7063             STRB     R3,[R4, #+1]
   \   00000052   0x2301             MOVS     R3,#+1
   \   00000054   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   00000058   0x70A3             STRB     R3,[R4, #+2]
   \   0000005A   0xE05A             B.N      ??Bef_Scan_5
   \                     ??Bef_Scan_4: (+1)
   \   0000005C   0x2304             MOVS     R3,#+4
   \   0000005E   0xE000             B.N      ??Bef_Scan_6
   \                     ??Bef_Scan_7: (+1)
   \   00000060   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Bef_Scan_6: (+1)
   \   00000062   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000064   0x2B9F             CMP      R3,#+159
   \   00000066   0xDA2F             BGE.N    ??Bef_Scan_8
   \   00000068   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000006A   0x24A0             MOVS     R4,#+160
   \   0000006C   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   00000070   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000072   0x5D1C             LDRB     R4,[R3, R4]
   \   00000074   0x2CFF             CMP      R4,#+255
   \   00000076   0xD1F3             BNE.N    ??Bef_Scan_7
   \   00000078   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000007A   0x24A0             MOVS     R4,#+160
   \   0000007C   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   00000080   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000082   0x191C             ADDS     R4,R3,R4
   \   00000084   0xF814 0x4C01      LDRB     R4,[R4, #-1]
   \   00000088   0x2CFF             CMP      R4,#+255
   \   0000008A   0xD1E9             BNE.N    ??Bef_Scan_7
   \   0000008C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000008E   0x24A0             MOVS     R4,#+160
   \   00000090   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   00000094   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000096   0x191C             ADDS     R4,R3,R4
   \   00000098   0xF814 0x4C02      LDRB     R4,[R4, #-2]
   \   0000009C   0x2C00             CMP      R4,#+0
   \   0000009E   0xD1DF             BNE.N    ??Bef_Scan_7
   \   000000A0   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000A2   0x24A0             MOVS     R4,#+160
   \   000000A4   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   000000A8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000AA   0x191C             ADDS     R4,R3,R4
   \   000000AC   0xF814 0x4C03      LDRB     R4,[R4, #-3]
   \   000000B0   0x2C00             CMP      R4,#+0
   \   000000B2   0xD1D5             BNE.N    ??Bef_Scan_7
   \   000000B4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B6   0x1E5C             SUBS     R4,R3,#+1
   \   000000B8   0x.... 0x....      LDR.W    R5,??DataTable5_3
   \   000000BC   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000BE   0xEB15 0x0541      ADDS     R5,R5,R1, LSL #+1
   \   000000C2   0xF515 0x55C8      ADDS     R5,R5,#+6400
   \   000000C6   0x802C             STRH     R4,[R5, #+0]
   \                     ??Bef_Scan_8: (+1)
   \   000000C8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000CA   0x2B9F             CMP      R3,#+159
   \   000000CC   0xD115             BNE.N    ??Bef_Scan_9
   \   000000CE   0x2301             MOVS     R3,#+1
   \   000000D0   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   000000D4   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000D6   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   000000DA   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   000000DE   0x8023             STRH     R3,[R4, #+0]
   \   000000E0   0x2301             MOVS     R3,#+1
   \   000000E2   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   000000E6   0x7023             STRB     R3,[R4, #+0]
   \   000000E8   0x2300             MOVS     R3,#+0
   \   000000EA   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   000000EE   0x7063             STRB     R3,[R4, #+1]
   \   000000F0   0x2301             MOVS     R3,#+1
   \   000000F2   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   000000F6   0x70A3             STRB     R3,[R4, #+2]
   \   000000F8   0xE00B             B.N      ??Bef_Scan_5
   \                     ??Bef_Scan_9: (+1)
   \   000000FA   0x2300             MOVS     R3,#+0
   \   000000FC   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   00000100   0x7023             STRB     R3,[R4, #+0]
   \   00000102   0x2300             MOVS     R3,#+0
   \   00000104   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   00000108   0x7063             STRB     R3,[R4, #+1]
   \   0000010A   0x2300             MOVS     R3,#+0
   \   0000010C   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   00000110   0x70A3             STRB     R3,[R4, #+2]
   \                     ??Bef_Scan_5: (+1)
   \   00000112   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000114   0x23A0             MOVS     R3,#+160
   \   00000116   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   0000011A   0xF893 0x309E      LDRB     R3,[R3, #+158]
   \   0000011E   0x2BFF             CMP      R3,#+255
   \   00000120   0xD11D             BNE.N    ??Bef_Scan_10
   \   00000122   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000124   0x23A0             MOVS     R3,#+160
   \   00000126   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   0000012A   0xF893 0x309D      LDRB     R3,[R3, #+157]
   \   0000012E   0x2BFF             CMP      R3,#+255
   \   00000130   0xD115             BNE.N    ??Bef_Scan_10
   \   00000132   0x239D             MOVS     R3,#+157
   \   00000134   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   00000138   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000013A   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   0000013E   0xF641 0x1550      MOVW     R5,#+6480
   \   00000142   0x532B             STRH     R3,[R5, R4]
   \   00000144   0x2300             MOVS     R3,#+0
   \   00000146   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   0000014A   0x7023             STRB     R3,[R4, #+0]
   \   0000014C   0x2301             MOVS     R3,#+1
   \   0000014E   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000152   0x7063             STRB     R3,[R4, #+1]
   \   00000154   0x2301             MOVS     R3,#+1
   \   00000156   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   0000015A   0x70A3             STRB     R3,[R4, #+2]
   \   0000015C   0xE05B             B.N      ??Bef_Scan_11
   \                     ??Bef_Scan_10: (+1)
   \   0000015E   0x239B             MOVS     R3,#+155
   \   00000160   0xE000             B.N      ??Bef_Scan_12
   \                     ??Bef_Scan_13: (+1)
   \   00000162   0x1E5B             SUBS     R3,R3,#+1
   \                     ??Bef_Scan_12: (+1)
   \   00000164   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000166   0x2B00             CMP      R3,#+0
   \   00000168   0xD030             BEQ.N    ??Bef_Scan_14
   \   0000016A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000016C   0x24A0             MOVS     R4,#+160
   \   0000016E   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   00000172   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000174   0x5D1C             LDRB     R4,[R3, R4]
   \   00000176   0x2CFF             CMP      R4,#+255
   \   00000178   0xD1F3             BNE.N    ??Bef_Scan_13
   \   0000017A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000017C   0x24A0             MOVS     R4,#+160
   \   0000017E   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   00000182   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000184   0x191C             ADDS     R4,R3,R4
   \   00000186   0x7864             LDRB     R4,[R4, #+1]
   \   00000188   0x2CFF             CMP      R4,#+255
   \   0000018A   0xD1EA             BNE.N    ??Bef_Scan_13
   \   0000018C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000018E   0x24A0             MOVS     R4,#+160
   \   00000190   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   00000194   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000196   0x191C             ADDS     R4,R3,R4
   \   00000198   0x78A4             LDRB     R4,[R4, #+2]
   \   0000019A   0x2C00             CMP      R4,#+0
   \   0000019C   0xD1E1             BNE.N    ??Bef_Scan_13
   \   0000019E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001A0   0x24A0             MOVS     R4,#+160
   \   000001A2   0xFB11 0x0404      SMLABB   R4,R1,R4,R0
   \   000001A6   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001A8   0x191C             ADDS     R4,R3,R4
   \   000001AA   0x78E4             LDRB     R4,[R4, #+3]
   \   000001AC   0x2C00             CMP      R4,#+0
   \   000001AE   0xD1D8             BNE.N    ??Bef_Scan_13
   \   000001B0   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001B2   0x1C5C             ADDS     R4,R3,#+1
   \   000001B4   0x.... 0x....      LDR.W    R5,??DataTable5_3
   \   000001B8   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001BA   0xEB15 0x0541      ADDS     R5,R5,R1, LSL #+1
   \   000001BE   0xF641 0x1650      MOVW     R6,#+6480
   \   000001C2   0x5374             STRH     R4,[R6, R5]
   \   000001C4   0x2400             MOVS     R4,#+0
   \   000001C6   0x.... 0x....      LDR.W    R5,??DataTable5_5
   \   000001CA   0x70AC             STRB     R4,[R5, #+2]
   \                     ??Bef_Scan_14: (+1)
   \   000001CC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001CE   0x2B00             CMP      R3,#+0
   \   000001D0   0xD115             BNE.N    ??Bef_Scan_15
   \   000001D2   0x239D             MOVS     R3,#+157
   \   000001D4   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   000001D8   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001DA   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   000001DE   0xF641 0x1550      MOVW     R5,#+6480
   \   000001E2   0x532B             STRH     R3,[R5, R4]
   \   000001E4   0x2301             MOVS     R3,#+1
   \   000001E6   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   000001EA   0x7023             STRB     R3,[R4, #+0]
   \   000001EC   0x2300             MOVS     R3,#+0
   \   000001EE   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   000001F2   0x7063             STRB     R3,[R4, #+1]
   \   000001F4   0x2301             MOVS     R3,#+1
   \   000001F6   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   000001FA   0x70A3             STRB     R3,[R4, #+2]
   \   000001FC   0xE00B             B.N      ??Bef_Scan_11
   \                     ??Bef_Scan_15: (+1)
   \   000001FE   0x2300             MOVS     R3,#+0
   \   00000200   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000204   0x7023             STRB     R3,[R4, #+0]
   \   00000206   0x2300             MOVS     R3,#+0
   \   00000208   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   0000020C   0x7063             STRB     R3,[R4, #+1]
   \   0000020E   0x2300             MOVS     R3,#+0
   \   00000210   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000214   0x70A3             STRB     R3,[R4, #+2]
   \                     ??Bef_Scan_11: (+1)
   \   00000216   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000021A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000021C   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   00000220   0xF641 0x1450      MOVW     R4,#+6480
   \   00000224   0x5EE3             LDRSH    R3,[R4, R3]
   \   00000226   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   0000022A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000022C   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   00000230   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   00000234   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \   00000238   0x42A3             CMP      R3,R4
   \   0000023A   0xDA11             BGE.N    ??Bef_Scan_16
   \   0000023C   0x2302             MOVS     R3,#+2
   \   0000023E   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   00000242   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000244   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   00000248   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   0000024C   0x8023             STRH     R3,[R4, #+0]
   \   0000024E   0x239D             MOVS     R3,#+157
   \   00000250   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   00000254   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000256   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   0000025A   0xF641 0x1550      MOVW     R5,#+6480
   \   0000025E   0x532B             STRH     R3,[R5, R4]
   \                     ??Bef_Scan_16: (+1)
   \   00000260   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   00000264   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000266   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   0000026A   0xF641 0x1450      MOVW     R4,#+6480
   \   0000026E   0x5AE3             LDRH     R3,[R4, R3]
   \   00000270   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   00000274   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000276   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   0000027A   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   0000027E   0x8824             LDRH     R4,[R4, #+0]
   \   00000280   0x1B1B             SUBS     R3,R3,R4
   \   00000282   0x.... 0x....      LDR.W    R4,??DataTable5_11
   \   00000286   0x7023             STRB     R3,[R4, #+0]
   \   00000288   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000028C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000028E   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   00000292   0xF641 0x1450      MOVW     R4,#+6480
   \   00000296   0x5EE3             LDRSH    R3,[R4, R3]
   \   00000298   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   0000029C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000029E   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   000002A2   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   000002A6   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \   000002AA   0xFA04 0xF383      SXTAH    R3,R4,R3
   \   000002AE   0x2402             MOVS     R4,#+2
   \   000002B0   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   000002B4   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   000002B8   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002BA   0x190C             ADDS     R4,R1,R4
   \   000002BC   0xF514 0x54CD      ADDS     R4,R4,#+6560
   \   000002C0   0x7023             STRB     R3,[R4, #+0]
   \   000002C2   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   000002C6   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002C8   0x18CB             ADDS     R3,R1,R3
   \   000002CA   0xF513 0x53CD      ADDS     R3,R3,#+6560
   \   000002CE   0x781B             LDRB     R3,[R3, #+0]
   \   000002D0   0x2B9B             CMP      R3,#+155
   \   000002D2   0xDB0F             BLT.N    ??Bef_Scan_17
   \   000002D4   0x239B             MOVS     R3,#+155
   \   000002D6   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   000002DA   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002DC   0x190C             ADDS     R4,R1,R4
   \   000002DE   0xF514 0x54CD      ADDS     R4,R4,#+6560
   \   000002E2   0x7023             STRB     R3,[R4, #+0]
   \   000002E4   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   000002E8   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002EA   0x18CB             ADDS     R3,R1,R3
   \   000002EC   0xF513 0x53CD      ADDS     R3,R3,#+6560
   \   000002F0   0x781B             LDRB     R3,[R3, #+0]
   \   000002F2   0xE000             B.N      ??Bef_Scan_18
   \                     ??Bef_Scan_17: (+1)
   \   000002F4   0x2300             MOVS     R3,#+0
   \                     ??Bef_Scan_18: (+1)
   \   000002F6   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   000002FA   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002FC   0x18CB             ADDS     R3,R1,R3
   \   000002FE   0xF513 0x53CD      ADDS     R3,R3,#+6560
   \   00000302   0x781B             LDRB     R3,[R3, #+0]
   \   00000304   0x2B05             CMP      R3,#+5
   \   00000306   0xDA0F             BGE.N    ??Bef_Scan_19
   \   00000308   0x2304             MOVS     R3,#+4
   \   0000030A   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   0000030E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000310   0x190C             ADDS     R4,R1,R4
   \   00000312   0xF514 0x54CD      ADDS     R4,R4,#+6560
   \   00000316   0x7023             STRB     R3,[R4, #+0]
   \   00000318   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000031C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000031E   0x18CB             ADDS     R3,R1,R3
   \   00000320   0xF513 0x53CD      ADDS     R3,R3,#+6560
   \   00000324   0x781B             LDRB     R3,[R3, #+0]
   \   00000326   0xE000             B.N      ??Bef_Scan_20
   \                     ??Bef_Scan_19: (+1)
   \   00000328   0x2300             MOVS     R3,#+0
   \                     ??Bef_Scan_20: (+1)
   \   0000032A   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   0000032E   0x781B             LDRB     R3,[R3, #+0]
   \   00000330   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000334   0x7824             LDRB     R4,[R4, #+0]
   \   00000336   0x4223             TST      R3,R4
   \   00000338   0xF43F 0xAE66      BEQ.W    ??Bef_Scan_1
   \   0000033C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000033E   0x0013             MOVS     R3,R2
   \   00000340   0x1C52             ADDS     R2,R2,#+1
   \   00000342   0xE662             B.N      ??Bef_Scan_2
    184          	}
    185          	if(Black_Check > 2)
   \                     ??Bef_Scan_3: (+1)
   \   00000344   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000346   0x2A03             CMP      R2,#+3
   \   00000348   0xDB20             BLT.N    ??Bef_Scan_21
    186          	{
    187          
    188          		LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0);
   \   0000034A   0x2200             MOVS     R2,#+0
   \   0000034C   0x2101             MOVS     R1,#+1
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x40038000
   \   00000352   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    189          		LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2, 0);
   \   00000356   0x2200             MOVS     R2,#+0
   \   00000358   0x2102             MOVS     R1,#+2
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x40038000
   \   0000035E   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    190          		LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3, 0);
   \   00000362   0x2200             MOVS     R2,#+0
   \   00000364   0x2103             MOVS     R1,#+3
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x40038000
   \   0000036A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    191          		LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4, 0);
   \   0000036E   0x2200             MOVS     R2,#+0
   \   00000370   0x2104             MOVS     R1,#+4
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x40038000
   \   00000376   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    192          		OLED_Clear();
   \   0000037A   0x.... 0x....      BL       OLED_Clear
    193          		OLED_ShowString(0 , 3 , "Car Broke Down!");
   \   0000037E   0x.... 0x....      LDR.W    R2,??DataTable5_13
   \   00000382   0x2103             MOVS     R1,#+3
   \   00000384   0x2000             MOVS     R0,#+0
   \   00000386   0x.... 0x....      BL       OLED_ShowString
    194          		while(1);
   \                     ??Bef_Scan_22: (+1)
   \   0000038A   0xE7FE             B.N      ??Bef_Scan_22
    195          	}
    196          	return Row;
   \                     ??Bef_Scan_21: (+1)
   \   0000038C   0x0008             MOVS     R0,R1
   \   0000038E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000390   0xBD70             POP      {R4-R6,PC}       ;; return
    197          }

   \                                 In section .text, align 2, keep-with-next
    198          void TwinLine_Deal(uint8 *pic_buff,int8 Row_buff)
    199          {
   \                     TwinLine_Deal: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    200          	uint8 i;
    201          	//‰ªé‰∏≠Èó¥ÂêëÂ∑¶Êâ´Â∑¶‰∏≠Á∫ø
    202          	for(i = PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff + 1];i > 0;i--)
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000006   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000008   0x188A             ADDS     R2,R1,R2
   \   0000000A   0xF641 0x13A1      MOVW     R3,#+6561
   \   0000000E   0x5C9A             LDRB     R2,[R3, R2]
   \   00000010   0xE000             B.N      ??TwinLine_Deal_0
   \                     ??TwinLine_Deal_1: (+1)
   \   00000012   0x1E52             SUBS     R2,R2,#+1
   \                     ??TwinLine_Deal_0: (+1)
   \   00000014   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000016   0x2A00             CMP      R2,#+0
   \   00000018   0xD02C             BEQ.N    ??TwinLine_Deal_2
    203          	{
    204          		if(Black == *(pic_buff + Row_buff * PICTURE_W + i) &&		\
    205          		   Black == *(pic_buff + Row_buff * PICTURE_W + i + 1) &&	\
    206          		   White == *(pic_buff + Row_buff * PICTURE_W + i + 2) &&	\
    207          		   White == *(pic_buff + Row_buff * PICTURE_W + i + 3))
   \   0000001A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000001C   0x23A0             MOVS     R3,#+160
   \   0000001E   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   00000022   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000024   0x5CD3             LDRB     R3,[R2, R3]
   \   00000026   0x2B00             CMP      R3,#+0
   \   00000028   0xD1F3             BNE.N    ??TwinLine_Deal_1
   \   0000002A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000002C   0x23A0             MOVS     R3,#+160
   \   0000002E   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   00000032   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000034   0x18D3             ADDS     R3,R2,R3
   \   00000036   0x785B             LDRB     R3,[R3, #+1]
   \   00000038   0x2B00             CMP      R3,#+0
   \   0000003A   0xD1EA             BNE.N    ??TwinLine_Deal_1
   \   0000003C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000003E   0x23A0             MOVS     R3,#+160
   \   00000040   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   00000044   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000046   0x18D3             ADDS     R3,R2,R3
   \   00000048   0x789B             LDRB     R3,[R3, #+2]
   \   0000004A   0x2BFF             CMP      R3,#+255
   \   0000004C   0xD1E1             BNE.N    ??TwinLine_Deal_1
   \   0000004E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000050   0x23A0             MOVS     R3,#+160
   \   00000052   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   00000056   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000058   0x18D3             ADDS     R3,R2,R3
   \   0000005A   0x78DB             LDRB     R3,[R3, #+3]
   \   0000005C   0x2BFF             CMP      R3,#+255
   \   0000005E   0xD1D8             BNE.N    ??TwinLine_Deal_1
    208          		{
    209          			PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff] = i + 1;
   \   00000060   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000062   0x1C53             ADDS     R3,R2,#+1
   \   00000064   0x.... 0x....      LDR.W    R4,??DataTable5_3
   \   00000068   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000006A   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   0000006E   0xF514 0x54C8      ADDS     R4,R4,#+6400
   \   00000072   0x8023             STRH     R3,[R4, #+0]
    210          			break;
    211          		}
    212          	}
    213          	if(i == 0)
   \                     ??TwinLine_Deal_2: (+1)
   \   00000074   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000076   0x2A00             CMP      R2,#+0
   \   00000078   0xF040 0x8088      BNE.W    ??TwinLine_Deal_3
    214          	{
    215          		if(White == *(pic_buff + Row_buff * PICTURE_W + 1) &&   \
    216          		   White == *(pic_buff + Row_buff * PICTURE_W + 2))
   \   0000007C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000007E   0x22A0             MOVS     R2,#+160
   \   00000080   0xFB11 0x0202      SMLABB   R2,R1,R2,R0
   \   00000084   0x7852             LDRB     R2,[R2, #+1]
   \   00000086   0x2AFF             CMP      R2,#+255
   \   00000088   0xD113             BNE.N    ??TwinLine_Deal_4
   \   0000008A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000008C   0x22A0             MOVS     R2,#+160
   \   0000008E   0xFB11 0x0202      SMLABB   R2,R1,R2,R0
   \   00000092   0x7892             LDRB     R2,[R2, #+2]
   \   00000094   0x2AFF             CMP      R2,#+255
   \   00000096   0xD10C             BNE.N    ??TwinLine_Deal_4
    217          		{
    218          			LeftFlag_Switch.LeftWhiteLost = 1;
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   0000009E   0x705A             STRB     R2,[R3, #+1]
    219          			LeftFlag_Switch.LeftBlackLost = 0;
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   000000A6   0x701A             STRB     R2,[R3, #+0]
    220          			LeftFlag_Switch.LeftLost = 1;
   \   000000A8   0x2201             MOVS     R2,#+1
   \   000000AA   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   000000AE   0x709A             STRB     R2,[R3, #+2]
   \   000000B0   0xE00B             B.N      ??TwinLine_Deal_5
    221          		}
    222          		else
    223          		{
    224          			LeftFlag_Switch.LeftWhiteLost = 0;
   \                     ??TwinLine_Deal_4: (+1)
   \   000000B2   0x2200             MOVS     R2,#+0
   \   000000B4   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   000000B8   0x705A             STRB     R2,[R3, #+1]
    225          			LeftFlag_Switch.LeftBlackLost = 1;
   \   000000BA   0x2201             MOVS     R2,#+1
   \   000000BC   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   000000C0   0x701A             STRB     R2,[R3, #+0]
    226          			LeftFlag_Switch.LeftLost = 1;
   \   000000C2   0x2201             MOVS     R2,#+1
   \   000000C4   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   000000C8   0x709A             STRB     R2,[R3, #+2]
    227          		}
    228          		PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff] = PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff + 1] \
    229          															  + PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff + 2] \
    230          															  - PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff + 3];
   \                     ??TwinLine_Deal_5: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   000000CE   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000D0   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   000000D4   0xF641 0x1302      MOVW     R3,#+6402
   \   000000D8   0x5A9A             LDRH     R2,[R3, R2]
   \   000000DA   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   000000DE   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000E0   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   000000E4   0xF641 0x1404      MOVW     R4,#+6404
   \   000000E8   0x5AE3             LDRH     R3,[R4, R3]
   \   000000EA   0x189A             ADDS     R2,R3,R2
   \   000000EC   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   000000F0   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000F2   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   000000F6   0xF641 0x1406      MOVW     R4,#+6406
   \   000000FA   0x5AE3             LDRH     R3,[R4, R3]
   \   000000FC   0x1AD2             SUBS     R2,R2,R3
   \   000000FE   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   00000102   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000104   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   00000108   0xF513 0x53C8      ADDS     R3,R3,#+6400
   \   0000010C   0x801A             STRH     R2,[R3, #+0]
    231          
    232          		(PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff] <= 2) ?  \
    233          			(PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff] = 2) : (NULL);
   \   0000010E   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000112   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000114   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000118   0xF512 0x52C8      ADDS     R2,R2,#+6400
   \   0000011C   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000120   0x2A03             CMP      R2,#+3
   \   00000122   0xDA12             BGE.N    ??TwinLine_Deal_6
   \   00000124   0x2202             MOVS     R2,#+2
   \   00000126   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000012A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000012C   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   00000130   0xF513 0x53C8      ADDS     R3,R3,#+6400
   \   00000134   0x801A             STRH     R2,[R3, #+0]
   \   00000136   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   0000013A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000013C   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000140   0xF512 0x52C8      ADDS     R2,R2,#+6400
   \   00000144   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000148   0xE000             B.N      ??TwinLine_Deal_7
   \                     ??TwinLine_Deal_6: (+1)
   \   0000014A   0x2200             MOVS     R2,#+0
    234          		(PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff] >= PICTURE_W - 3) ?
    235          			(PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff] = PICTURE_W - 3) : (NULL);
   \                     ??TwinLine_Deal_7: (+1)
   \   0000014C   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000150   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000152   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000156   0xF512 0x52C8      ADDS     R2,R2,#+6400
   \   0000015A   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000015E   0x2A9D             CMP      R2,#+157
   \   00000160   0xDB12             BLT.N    ??TwinLine_Deal_8
   \   00000162   0x229D             MOVS     R2,#+157
   \   00000164   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   00000168   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000016A   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   0000016E   0xF513 0x53C8      ADDS     R3,R3,#+6400
   \   00000172   0x801A             STRH     R2,[R3, #+0]
   \   00000174   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000178   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000017A   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000017E   0xF512 0x52C8      ADDS     R2,R2,#+6400
   \   00000182   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000186   0xE00A             B.N      ??TwinLine_Deal_9
   \                     ??TwinLine_Deal_8: (+1)
   \   00000188   0x2200             MOVS     R2,#+0
   \   0000018A   0xE008             B.N      ??TwinLine_Deal_9
    236          	}
    237          	else
    238          	{
    239          		LeftFlag_Switch.LeftWhiteLost = 0;
   \                     ??TwinLine_Deal_3: (+1)
   \   0000018C   0x2200             MOVS     R2,#+0
   \   0000018E   0x....             LDR.N    R3,??DataTable5_4
   \   00000190   0x705A             STRB     R2,[R3, #+1]
    240          		LeftFlag_Switch.LeftBlackLost = 0;
   \   00000192   0x2200             MOVS     R2,#+0
   \   00000194   0x....             LDR.N    R3,??DataTable5_4
   \   00000196   0x701A             STRB     R2,[R3, #+0]
    241          		LeftFlag_Switch.LeftLost = 0;
   \   00000198   0x2200             MOVS     R2,#+0
   \   0000019A   0x....             LDR.N    R3,??DataTable5_4
   \   0000019C   0x709A             STRB     R2,[R3, #+2]
    242          	}
    243          	//‰ªé‰∏≠Èó¥ÂêëÂè≥Êâ´Âè≥Á∫ø
    244          	for(i = PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff + 1];i < PICTURE_W - 1;i++)
   \                     ??TwinLine_Deal_9: (+1)
   \   0000019E   0x....             LDR.N    R2,??DataTable5_3
   \   000001A0   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001A2   0x188A             ADDS     R2,R1,R2
   \   000001A4   0xF641 0x13A1      MOVW     R3,#+6561
   \   000001A8   0x5C9A             LDRB     R2,[R3, R2]
   \   000001AA   0xE000             B.N      ??TwinLine_Deal_10
   \                     ??TwinLine_Deal_11: (+1)
   \   000001AC   0x1C52             ADDS     R2,R2,#+1
   \                     ??TwinLine_Deal_10: (+1)
   \   000001AE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B0   0x2A9F             CMP      R2,#+159
   \   000001B2   0xDA2E             BGE.N    ??TwinLine_Deal_12
    245          	{
    246          		if(Black == *(pic_buff + Row_buff * PICTURE_W + i) &&
    247          		   Black == *(pic_buff + Row_buff * PICTURE_W + i - 1) &&
    248          		   White == *(pic_buff + Row_buff * PICTURE_W + i - 2) &&
    249          		   White == *(pic_buff + Row_buff * PICTURE_W + i - 3))
   \   000001B4   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001B6   0x23A0             MOVS     R3,#+160
   \   000001B8   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   000001BC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001BE   0x5CD3             LDRB     R3,[R2, R3]
   \   000001C0   0x2B00             CMP      R3,#+0
   \   000001C2   0xD1F3             BNE.N    ??TwinLine_Deal_11
   \   000001C4   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001C6   0x23A0             MOVS     R3,#+160
   \   000001C8   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   000001CC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001CE   0x18D3             ADDS     R3,R2,R3
   \   000001D0   0xF813 0x3C01      LDRB     R3,[R3, #-1]
   \   000001D4   0x2B00             CMP      R3,#+0
   \   000001D6   0xD1E9             BNE.N    ??TwinLine_Deal_11
   \   000001D8   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001DA   0x23A0             MOVS     R3,#+160
   \   000001DC   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   000001E0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001E2   0x18D3             ADDS     R3,R2,R3
   \   000001E4   0xF813 0x3C02      LDRB     R3,[R3, #-2]
   \   000001E8   0x2BFF             CMP      R3,#+255
   \   000001EA   0xD1DF             BNE.N    ??TwinLine_Deal_11
   \   000001EC   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000001EE   0x23A0             MOVS     R3,#+160
   \   000001F0   0xFB11 0x0303      SMLABB   R3,R1,R3,R0
   \   000001F4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001F6   0x18D3             ADDS     R3,R2,R3
   \   000001F8   0xF813 0x3C03      LDRB     R3,[R3, #-3]
   \   000001FC   0x2BFF             CMP      R3,#+255
   \   000001FE   0xD1D5             BNE.N    ??TwinLine_Deal_11
    250          		{
    251          			PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff] = i - 1;
   \   00000200   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000202   0x1E53             SUBS     R3,R2,#+1
   \   00000204   0x....             LDR.N    R4,??DataTable5_3
   \   00000206   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000208   0xEB14 0x0441      ADDS     R4,R4,R1, LSL #+1
   \   0000020C   0xF641 0x1550      MOVW     R5,#+6480
   \   00000210   0x532B             STRH     R3,[R5, R4]
    252          			break;
    253          		}
    254          	}
    255          	if(i == PICTURE_W - 1)
   \                     ??TwinLine_Deal_12: (+1)
   \   00000212   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000214   0x2A9F             CMP      R2,#+159
   \   00000216   0xD175             BNE.N    ??TwinLine_Deal_13
    256          	{
    257          		if(White == *(pic_buff + Row_buff * PICTURE_W + PICTURE_W - 2) &&   \
    258          		   White == *(pic_buff + Row_buff * PICTURE_W + PICTURE_W - 3)  )
   \   00000218   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000021A   0x22A0             MOVS     R2,#+160
   \   0000021C   0xFB11 0x0202      SMLABB   R2,R1,R2,R0
   \   00000220   0xF892 0x209E      LDRB     R2,[R2, #+158]
   \   00000224   0x2AFF             CMP      R2,#+255
   \   00000226   0xD111             BNE.N    ??TwinLine_Deal_14
   \   00000228   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000022A   0x22A0             MOVS     R2,#+160
   \   0000022C   0xFB11 0x0002      SMLABB   R0,R1,R2,R0
   \   00000230   0xF890 0x009D      LDRB     R0,[R0, #+157]
   \   00000234   0x28FF             CMP      R0,#+255
   \   00000236   0xD109             BNE.N    ??TwinLine_Deal_14
    259          		{
    260          			RightFlag_Switch.RightWhiteLost = 1;
   \   00000238   0x2001             MOVS     R0,#+1
   \   0000023A   0x....             LDR.N    R2,??DataTable5_5
   \   0000023C   0x7050             STRB     R0,[R2, #+1]
    261          			RightFlag_Switch.RightBlackLost = 0;
   \   0000023E   0x2000             MOVS     R0,#+0
   \   00000240   0x....             LDR.N    R2,??DataTable5_5
   \   00000242   0x7010             STRB     R0,[R2, #+0]
    262          			RightFlag_Switch.RightLost = 1;
   \   00000244   0x2001             MOVS     R0,#+1
   \   00000246   0x....             LDR.N    R2,??DataTable5_5
   \   00000248   0x7090             STRB     R0,[R2, #+2]
   \   0000024A   0xE008             B.N      ??TwinLine_Deal_15
    263          		}
    264          		else
    265          		{
    266          			RightFlag_Switch.RightWhiteLost = 0;
   \                     ??TwinLine_Deal_14: (+1)
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x....             LDR.N    R2,??DataTable5_5
   \   00000250   0x7050             STRB     R0,[R2, #+1]
    267          			RightFlag_Switch.RightBlackLost = 1;
   \   00000252   0x2001             MOVS     R0,#+1
   \   00000254   0x....             LDR.N    R2,??DataTable5_5
   \   00000256   0x7010             STRB     R0,[R2, #+0]
    268          			RightFlag_Switch.RightLost = 1;
   \   00000258   0x2001             MOVS     R0,#+1
   \   0000025A   0x....             LDR.N    R2,??DataTable5_5
   \   0000025C   0x7090             STRB     R0,[R2, #+2]
    269          		}
    270          		PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff] = PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff + 1] \
    271          															   + PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff + 2] \
    272          															   - PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff + 3];
   \                     ??TwinLine_Deal_15: (+1)
   \   0000025E   0x....             LDR.N    R0,??DataTable5_3
   \   00000260   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000262   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000266   0xF641 0x1252      MOVW     R2,#+6482
   \   0000026A   0x5A10             LDRH     R0,[R2, R0]
   \   0000026C   0x....             LDR.N    R2,??DataTable5_3
   \   0000026E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000270   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000274   0xF641 0x1354      MOVW     R3,#+6484
   \   00000278   0x5A9A             LDRH     R2,[R3, R2]
   \   0000027A   0x1810             ADDS     R0,R2,R0
   \   0000027C   0x....             LDR.N    R2,??DataTable5_3
   \   0000027E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000280   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000284   0xF641 0x1356      MOVW     R3,#+6486
   \   00000288   0x5A9A             LDRH     R2,[R3, R2]
   \   0000028A   0x1A80             SUBS     R0,R0,R2
   \   0000028C   0x....             LDR.N    R2,??DataTable5_3
   \   0000028E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000290   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000294   0xF641 0x1350      MOVW     R3,#+6480
   \   00000298   0x5298             STRH     R0,[R3, R2]
    273          		(PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff] >= PICTURE_W - 3) ? \
    274          			(PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff] = PICTURE_W - 3) : (NULL);
   \   0000029A   0x....             LDR.N    R0,??DataTable5_3
   \   0000029C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000029E   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000002A2   0xF641 0x1250      MOVW     R2,#+6480
   \   000002A6   0x5E10             LDRSH    R0,[R2, R0]
   \   000002A8   0x289D             CMP      R0,#+157
   \   000002AA   0xDB0F             BLT.N    ??TwinLine_Deal_16
   \   000002AC   0x209D             MOVS     R0,#+157
   \   000002AE   0x....             LDR.N    R2,??DataTable5_3
   \   000002B0   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002B2   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   000002B6   0xF641 0x1350      MOVW     R3,#+6480
   \   000002BA   0x5298             STRH     R0,[R3, R2]
   \   000002BC   0x....             LDR.N    R0,??DataTable5_3
   \   000002BE   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002C0   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000002C4   0xF641 0x1250      MOVW     R2,#+6480
   \   000002C8   0x5E10             LDRSH    R0,[R2, R0]
   \   000002CA   0xE000             B.N      ??TwinLine_Deal_17
   \                     ??TwinLine_Deal_16: (+1)
   \   000002CC   0x2000             MOVS     R0,#+0
    275          		(PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff] <= 2) ? \
    276          			(PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff] = 2) : (NULL);
   \                     ??TwinLine_Deal_17: (+1)
   \   000002CE   0x....             LDR.N    R0,??DataTable5_3
   \   000002D0   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002D2   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000002D6   0xF641 0x1250      MOVW     R2,#+6480
   \   000002DA   0x5E10             LDRSH    R0,[R2, R0]
   \   000002DC   0x2803             CMP      R0,#+3
   \   000002DE   0xDA0F             BGE.N    ??TwinLine_Deal_18
   \   000002E0   0x2002             MOVS     R0,#+2
   \   000002E2   0x....             LDR.N    R2,??DataTable5_3
   \   000002E4   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002E6   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   000002EA   0xF641 0x1350      MOVW     R3,#+6480
   \   000002EE   0x5298             STRH     R0,[R3, R2]
   \   000002F0   0x....             LDR.N    R0,??DataTable5_3
   \   000002F2   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000002F4   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000002F8   0xF641 0x1250      MOVW     R2,#+6480
   \   000002FC   0x5E10             LDRSH    R0,[R2, R0]
   \   000002FE   0xE00A             B.N      ??TwinLine_Deal_19
   \                     ??TwinLine_Deal_18: (+1)
   \   00000300   0x2000             MOVS     R0,#+0
   \   00000302   0xE008             B.N      ??TwinLine_Deal_19
    277          	}
    278          	else
    279          	{
    280          		RightFlag_Switch.RightWhiteLost = 0;
   \                     ??TwinLine_Deal_13: (+1)
   \   00000304   0x2000             MOVS     R0,#+0
   \   00000306   0x....             LDR.N    R2,??DataTable5_5
   \   00000308   0x7050             STRB     R0,[R2, #+1]
    281          		RightFlag_Switch.RightBlackLost = 0;
   \   0000030A   0x2000             MOVS     R0,#+0
   \   0000030C   0x....             LDR.N    R2,??DataTable5_5
   \   0000030E   0x7010             STRB     R0,[R2, #+0]
    282          		RightFlag_Switch.RightLost = 0;
   \   00000310   0x2000             MOVS     R0,#+0
   \   00000312   0x....             LDR.N    R2,??DataTable5_5
   \   00000314   0x7090             STRB     R0,[R2, #+2]
    283          	}
    284          	PIC_DateBlock.TrackInf_DataBlock.TrackWidth = PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff]     \
    285          		                                              - PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff];
   \                     ??TwinLine_Deal_19: (+1)
   \   00000316   0x....             LDR.N    R0,??DataTable5_3
   \   00000318   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000031A   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   0000031E   0xF641 0x1250      MOVW     R2,#+6480
   \   00000322   0x5A10             LDRH     R0,[R2, R0]
   \   00000324   0x....             LDR.N    R2,??DataTable5_3
   \   00000326   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000328   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000032C   0xF512 0x52C8      ADDS     R2,R2,#+6400
   \   00000330   0x8812             LDRH     R2,[R2, #+0]
   \   00000332   0x1A80             SUBS     R0,R0,R2
   \   00000334   0x....             LDR.N    R2,??DataTable5_11
   \   00000336   0x7010             STRB     R0,[R2, #+0]
    286          	PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff] = (PIC_DateBlock.TrackInf_DataBlock.RightLine[Row_buff]     \
    287          		                                                 + PIC_DateBlock.TrackInf_DataBlock.LeftLine[Row_buff]) / 2;
   \   00000338   0x....             LDR.N    R0,??DataTable5_3
   \   0000033A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000033C   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000340   0xF641 0x1250      MOVW     R2,#+6480
   \   00000344   0x5E10             LDRSH    R0,[R2, R0]
   \   00000346   0x....             LDR.N    R2,??DataTable5_3
   \   00000348   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000034A   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000034E   0xF512 0x52C8      ADDS     R2,R2,#+6400
   \   00000352   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000356   0xFA02 0xF080      SXTAH    R0,R2,R0
   \   0000035A   0x2202             MOVS     R2,#+2
   \   0000035C   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   00000360   0x....             LDR.N    R2,??DataTable5_3
   \   00000362   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000364   0x188A             ADDS     R2,R1,R2
   \   00000366   0xF512 0x52CD      ADDS     R2,R2,#+6560
   \   0000036A   0x7010             STRB     R0,[R2, #+0]
    288          	(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff] >= 155) ? 	\
    289          		(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff] = 155) : (NULL);
   \   0000036C   0x....             LDR.N    R0,??DataTable5_3
   \   0000036E   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000370   0x1808             ADDS     R0,R1,R0
   \   00000372   0xF510 0x50CD      ADDS     R0,R0,#+6560
   \   00000376   0x7800             LDRB     R0,[R0, #+0]
   \   00000378   0x289B             CMP      R0,#+155
   \   0000037A   0xDB0D             BLT.N    ??TwinLine_Deal_20
   \   0000037C   0x209B             MOVS     R0,#+155
   \   0000037E   0x....             LDR.N    R2,??DataTable5_3
   \   00000380   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000382   0x188A             ADDS     R2,R1,R2
   \   00000384   0xF512 0x52CD      ADDS     R2,R2,#+6560
   \   00000388   0x7010             STRB     R0,[R2, #+0]
   \   0000038A   0x....             LDR.N    R0,??DataTable5_3
   \   0000038C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000038E   0x1808             ADDS     R0,R1,R0
   \   00000390   0xF510 0x50CD      ADDS     R0,R0,#+6560
   \   00000394   0x7800             LDRB     R0,[R0, #+0]
   \   00000396   0xE000             B.N      ??TwinLine_Deal_21
   \                     ??TwinLine_Deal_20: (+1)
   \   00000398   0x2000             MOVS     R0,#+0
    290          	(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff] <= 4) ?
    291          		(PIC_DateBlock.TrackInf_DataBlock.MidLine[Row_buff] = 4) : (NULL);
   \                     ??TwinLine_Deal_21: (+1)
   \   0000039A   0x....             LDR.N    R0,??DataTable5_3
   \   0000039C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000039E   0x1808             ADDS     R0,R1,R0
   \   000003A0   0xF510 0x50CD      ADDS     R0,R0,#+6560
   \   000003A4   0x7800             LDRB     R0,[R0, #+0]
   \   000003A6   0x2805             CMP      R0,#+5
   \   000003A8   0xDA0D             BGE.N    ??TwinLine_Deal_22
   \   000003AA   0x2004             MOVS     R0,#+4
   \   000003AC   0x....             LDR.N    R2,??DataTable5_3
   \   000003AE   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000003B0   0x188A             ADDS     R2,R1,R2
   \   000003B2   0xF512 0x52CD      ADDS     R2,R2,#+6560
   \   000003B6   0x7010             STRB     R0,[R2, #+0]
   \   000003B8   0x....             LDR.N    R0,??DataTable5_3
   \   000003BA   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000003BC   0x1808             ADDS     R0,R1,R0
   \   000003BE   0xF510 0x50CD      ADDS     R0,R0,#+6560
   \   000003C2   0x7800             LDRB     R0,[R0, #+0]
   \   000003C4   0xE000             B.N      ??TwinLine_Deal_23
   \                     ??TwinLine_Deal_22: (+1)
   \   000003C6   0x2000             MOVS     R0,#+0
    292          }
   \                     ??TwinLine_Deal_23: (+1)
   \   000003C8   0xBC30             POP      {R4,R5}
   \   000003CA   0x4770             BX       LR               ;; return
    293          

   \                                 In section .text, align 2, keep-with-next
    294          void Get_MidAve(uint8 *MidLine_Buff,float32 Coe_1,float32 Coe_2,float32 Coe_3,float32 Coe_4)
    295          {
   \                     Get_MidAve: (+1)
   \   00000000   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    296          	uint8 i;
    297          	float32 sum1,sum2,sum3,sum4;
    298          	for (i = 0; i < 10; i++)
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xE008             B.N      ??Get_MidAve_0
    299          	{
    300          		sum1 += *(MidLine_Buff + i);
   \                     ??Get_MidAve_1: (+1)
   \   0000000E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000010   0x5D38             LDRB     R0,[R7, R4]
   \   00000012   0x.... 0x....      BL       __aeabi_ui2f
   \   00000016   0x4641             MOV      R1,R8
   \   00000018   0x.... 0x....      BL       __aeabi_fadd
   \   0000001C   0x4680             MOV      R8,R0
    301          	}
   \   0000001E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??Get_MidAve_0: (+1)
   \   00000020   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000022   0x2F0A             CMP      R7,#+10
   \   00000024   0xDBF3             BLT.N    ??Get_MidAve_1
    302          	for (; i < 20; i++)
   \                     ??Get_MidAve_2: (+1)
   \   00000026   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000028   0x2F14             CMP      R7,#+20
   \   0000002A   0xDA12             BGE.N    ??Get_MidAve_3
    303          	{
    304          		sum2 += *(MidLine_Buff + i);
   \   0000002C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000002E   0x5D38             LDRB     R0,[R7, R4]
   \   00000030   0x.... 0x....      BL       __aeabi_ui2f
   \   00000034   0x4649             MOV      R1,R9
   \   00000036   0x.... 0x....      BL       __aeabi_fadd
   \   0000003A   0x4681             MOV      R9,R0
    305          	}
   \   0000003C   0x1C7F             ADDS     R7,R7,#+1
   \   0000003E   0xE7F2             B.N      ??Get_MidAve_2
    306          	for(; i < 30; i++)
    307          	{
    308          		sum3 += *(MidLine_Buff + i);
   \                     ??Get_MidAve_4: (+1)
   \   00000040   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000042   0x5D38             LDRB     R0,[R7, R4]
   \   00000044   0x.... 0x....      BL       __aeabi_ui2f
   \   00000048   0x4651             MOV      R1,R10
   \   0000004A   0x.... 0x....      BL       __aeabi_fadd
   \   0000004E   0x4682             MOV      R10,R0
    309          	}
   \   00000050   0x1C7F             ADDS     R7,R7,#+1
   \                     ??Get_MidAve_3: (+1)
   \   00000052   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000054   0x2F1E             CMP      R7,#+30
   \   00000056   0xDBF3             BLT.N    ??Get_MidAve_4
    310          	for(; i < 40; i++)
   \                     ??Get_MidAve_5: (+1)
   \   00000058   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005A   0x2F28             CMP      R7,#+40
   \   0000005C   0xDA09             BGE.N    ??Get_MidAve_6
    311          	{
    312          		sum4 += *(MidLine_Buff + i);
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0x5D38             LDRB     R0,[R7, R4]
   \   00000062   0x.... 0x....      BL       __aeabi_ui2f
   \   00000066   0x4659             MOV      R1,R11
   \   00000068   0x.... 0x....      BL       __aeabi_fadd
   \   0000006C   0x4683             MOV      R11,R0
    313          	}
   \   0000006E   0x1C7F             ADDS     R7,R7,#+1
   \   00000070   0xE7F2             B.N      ??Get_MidAve_5
    314          	sum1 *= Coe_1 , sum2 *= Coe_2 , sum3 *= Coe_3 , sum4 *= Coe_4;
   \                     ??Get_MidAve_6: (+1)
   \   00000072   0x9800             LDR      R0,[SP, #+0]
   \   00000074   0x4641             MOV      R1,R8
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x4680             MOV      R8,R0
   \   0000007C   0x4648             MOV      R0,R9
   \   0000007E   0x0029             MOVS     R1,R5
   \   00000080   0x.... 0x....      BL       __aeabi_fmul
   \   00000084   0x4681             MOV      R9,R0
   \   00000086   0x4650             MOV      R0,R10
   \   00000088   0x0031             MOVS     R1,R6
   \   0000008A   0x.... 0x....      BL       __aeabi_fmul
   \   0000008E   0x4682             MOV      R10,R0
   \   00000090   0x980A             LDR      R0,[SP, #+40]
   \   00000092   0x4659             MOV      R1,R11
   \   00000094   0x.... 0x....      BL       __aeabi_fmul
   \   00000098   0x4683             MOV      R11,R0
    315          	MidAve = (int16) (sum1 + sum2 + sum3 + sum4);
   \   0000009A   0x4640             MOV      R0,R8
   \   0000009C   0x4649             MOV      R1,R9
   \   0000009E   0x.... 0x....      BL       __aeabi_fadd
   \   000000A2   0x4651             MOV      R1,R10
   \   000000A4   0x.... 0x....      BL       __aeabi_fadd
   \   000000A8   0x4659             MOV      R1,R11
   \   000000AA   0x.... 0x....      BL       __aeabi_fadd
   \   000000AE   0x.... 0x....      BL       __aeabi_f2iz
   \   000000B2   0x....             LDR.N    R1,??DataTable5_14
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
    316          }
   \   000000B6   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return

   \                                 In section .text, align 2, keep-with-next
    317          void Get_Img(void)
    318          {
   \                     Get_Img: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    319              ov7725_eagle_img_flag = IMG_START;                   //¬ø¬™√ä¬º¬≤√â¬º¬Ø√ç¬º√è√±
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x....             LDR.N    R1,??DataTable5_15
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    320              PORTA->ISFR = ~0;
   \   00000008   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000000C   0x....             LDR.N    R1,??DataTable5_16  ;; 0x400490a0
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    321              enable_irq((IRQn_Type)(PORTA_IRQn));
   \   00000010   0x2057             MOVS     R0,#+87
   \   00000012   0x.... 0x....      BL       NVIC_EnableIRQ
   \   00000016   0xE00D             B.N      ??Get_Img_0
    322              while (ov7725_eagle_img_flag != IMG_FINISH)
    323              {
    324                  if (ov7725_eagle_img_flag == IMG_FAIL)            //¬º√ô√à√ß√ç¬º√è√±¬≤√â¬º¬Ø¬¥√≠√é√≥¬£¬¨√î√≤√ñ√ò√ê√Ç¬ø¬™√ä¬º¬≤√â¬º¬Ø
   \                     ??Get_Img_1: (+1)
   \   00000018   0x....             LDR.N    R0,??DataTable5_15
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2802             CMP      R0,#+2
   \   0000001E   0xD109             BNE.N    ??Get_Img_0
    325                  {
    326                      ov7725_eagle_img_flag = IMG_START;           //¬ø¬™√ä¬º¬≤√â¬º¬Ø√ç¬º√è√±
   \   00000020   0x2004             MOVS     R0,#+4
   \   00000022   0x....             LDR.N    R1,??DataTable5_15
   \   00000024   0x7008             STRB     R0,[R1, #+0]
    327                      PORTA->ISFR = 0xFFFFFFFFu;                //√ê¬¥1√á√•√ñ√ê¬∂√è¬±√™√ñ¬æ√é¬ª(¬±√ò√ê√´¬µ√Ñ¬£¬¨¬≤¬ª√à¬ª¬ª√ò¬µ¬º√ñ√Ç√í¬ª¬ø¬™√ñ√ê¬∂√è¬æ√ç√Ç√≠√â√è¬¥¬•¬∑¬¢√ñ√ê¬∂√è)
   \   00000026   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000002A   0x....             LDR.N    R1,??DataTable5_16  ;; 0x400490a0
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    328                      enable_irq(PORTA_IRQn);                 //√î√ä√ê√≠PTA¬µ√Ñ√ñ√ê¬∂√è
   \   0000002E   0x2057             MOVS     R0,#+87
   \   00000030   0x.... 0x....      BL       NVIC_EnableIRQ
    329                  }
    330              }
   \                     ??Get_Img_0: (+1)
   \   00000034   0x....             LDR.N    R0,??DataTable5_15
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x2801             CMP      R0,#+1
   \   0000003A   0xD1ED             BNE.N    ??Get_Img_1
    331          }
   \   0000003C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     imgbuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     img

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     PIC_DateBlock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     LeftFlag_Switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     RightFlag_Switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x3CA3D70A         DC32     0x3ca3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x3CF5C28F         DC32     0x3cf5c28f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x3D23D70A         DC32     0x3d23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x3C23D70A         DC32     0x3c23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     PIC_DateBlock+0x19A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     PIC_DateBlock+0x19C8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     MidAve

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x........         DC32     ov7725_eagle_img_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x400490A0         DC32     0x400490a0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x43 0x61          DC8 "Car Broke Down!"
   \              0x72 0x20    
   \              0x42 0x72    
   \              0x6F 0x6B    
   \              0x65 0x20    
   \              0x44 0x6F    
   \              0x77 0x6E    
   \              0x21 0x00    
    332          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Bef_Scan
        16   -> LPLD_FTM_PWM_ChangeDuty
        16   -> OLED_Clear
        16   -> OLED_ShowString
       8   Get_Img
         8   -> NVIC_EnableIRQ
      40   Get_MidAve
        40   -> __aeabi_f2iz
        40   -> __aeabi_fadd
        40   -> __aeabi_fmul
        40   -> __aeabi_ui2f
      24   Get_MidLine
        24   -> Bef_Scan
        24   -> Get_MidAve
        24   -> TwinLine_Deal
        24   -> img_extract
       0   NVIC_EnableIRQ
       8   TwinLine_Deal


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      16  ?_0
     914  Bef_Scan
      62  Get_Img
     186  Get_MidAve
     516  Get_MidLine
       8  LeftFlag_Switch
       2  MidAve
      22  NVIC_EnableIRQ
    6604  PIC_DateBlock
       8  RightFlag_Switch
     972  TwinLine_Deal

 
 6 622 bytes in section .bss
    16 bytes in section .rodata
 2 740 bytes in section .text
 
 2 740 bytes of CODE  memory
    16 bytes of CONST memory
 6 622 bytes of DATA  memory

Errors: none
Warnings: none
