###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        11/May/2016  19:28:45
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\Menu.c
#    Command line =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\Menu.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\
#        -lB
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\
#        -o
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\app\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\app\Source\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\CPU\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\common\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\HW\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\FatFs\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\FatFs\option\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\common\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\driver\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\descriptor\
#        -I
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\Menu.lst
#    Object file  =  
#        E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\Obj\Menu.o
#
###############################################################################

E:\11ΩÏFreescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\Menu.c
      1          #include "Menu.h"
      2          #include "oled.h"
      3          #include "PID.h"
      4          #include "MotorDriver.h"
      5          

   \                                 In section .bss, align 1
      6          ListType currentList = DEBUG;
   \                     currentList:
   \   00000000                      DS8 1
      7          

   \                                 In section .data, align 4
      8          MenuType menuList[] = {
   \                     menuList:
   \   00000000   0x01 0x01          DC8 1, 1, 0, 2
   \              0x00 0x02    
   \   00000004   0x........         DC32 ?_0, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 1, 1
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \   00000018   0x........         DC32 ?_1, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000024   0x01 0x00          DC8 1, 0, 0, 0, 4, 3, 0, 5
   \              0x00 0x00    
   \              0x04 0x03    
   \              0x00 0x05    
   \   0000002C   0x........         DC32 ?_2, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0, 2, 4, 0, 8
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x00 0x08    
   \   00000040   0x........         DC32 ?_3, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   0000004C   0x01 0x00          DC8 1, 0, 0, 0, 3, 2, 0, 11
   \              0x00 0x00    
   \              0x03 0x02    
   \              0x00 0x0B    
   \   00000054   0x........         DC32 ?_4, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000060   0x02 0x00          DC8 2, 0, 0, 0, 7, 6, 2, 5
   \              0x00 0x00    
   \              0x07 0x06    
   \              0x02 0x05    
   \   00000068   0x........         DC32 ?_5, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 5, 7, 2, 6
   \              0x00 0x00    
   \              0x05 0x07    
   \              0x02 0x06    
   \   0000007C   0x........         DC32 ?_6, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000088   0x01 0x00          DC8 1, 0, 0, 0, 6, 5, 2, 7
   \              0x00 0x00    
   \              0x06 0x05    
   \              0x02 0x07    
   \   00000090   0x........         DC32 ?_7, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   0000009C   0x02 0x00          DC8 2, 0, 0, 0, 10, 9, 3, 8
   \              0x00 0x00    
   \              0x0A 0x09    
   \              0x03 0x08    
   \   000000A4   0x........         DC32 ?_8, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   000000B0   0x00 0x00          DC8 0, 0, 0, 0, 8, 10, 3, 9
   \              0x00 0x00    
   \              0x08 0x0A    
   \              0x03 0x09    
   \   000000B8   0x........         DC32 ?_9, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   000000C4   0x01 0x00          DC8 1, 0, 0, 0, 9, 14, 3, 10
   \              0x00 0x00    
   \              0x09 0x0E    
   \              0x03 0x0A    
   \   000000CC   0x........         DC32 ?_10, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   000000D8   0x02 0x00          DC8 2, 0, 0, 0, 13, 12, 4, 11
   \              0x00 0x00    
   \              0x0D 0x0C    
   \              0x04 0x0B    
   \   000000E0   0x........         DC32 ?_11, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   000000EC   0x00 0x00          DC8 0, 0, 0, 0, 11, 13, 4, 12
   \              0x00 0x00    
   \              0x0B 0x0D    
   \              0x04 0x0C    
   \   000000F4   0x........         DC32 ?_12, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000100   0x01 0x00          DC8 1, 0, 0, 0, 12, 11, 4, 13
   \              0x00 0x00    
   \              0x0C 0x0B    
   \              0x04 0x0D    
   \   00000108   0x........         DC32 ?_13, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000114   0x02 0x00          DC8 2, 0, 0, 0, 9, 8, 3, 14
   \              0x00 0x00    
   \              0x09 0x08    
   \              0x03 0x0E    
   \   0000011C   0x........         DC32 ?_14, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \   00000128   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
      9          	{RACE, RACE, DEBUG, PID_STEER, "Debug Mode", NULL, NULL, 0}, 			//Ë∞ÉËØïÊ®°Âºè
     10          	{DEBUG, DEBUG, RACE, RACE, "Race Mode", NULL, NULL, 1}, 					//ÊØîËµõÊ®°Âºè
     11          
     12          	{PID_DIFF, PID_MOTOR, DEBUG, STEER_KP, "Steer", NULL, NULL, 0},
     13          	{PID_STEER, PID_DIFF, DEBUG, MOTOR_KP, "Motor", NULL, NULL, 1},
     14          	{PID_MOTOR, PID_STEER, DEBUG, DIFF_KP, "Diff", NULL , NULL, 2},
     15          
     16          	{STEER_KI, STEER_KD, PID_STEER, STEER_KP, "Steer_Kp:", NULL, NULL, 0},
     17          	{STEER_KP, STEER_KI, PID_STEER, STEER_KD, "Steer_kd:", NULL, NULL, 1},
     18          	{STEER_KD, STEER_KP, PID_STEER, STEER_KI, "Steer_Ki:", NULL, NULL, 2},
     19          
     20          	{MOTOR_KI, MOTOR_KD, PID_MOTOR, MOTOR_KP, "Motro_Kp:", NULL, NULL, 0},
     21          	{MOTOR_KP, MOTOR_KI, PID_MOTOR, MOTOR_KD, "Motor_kd:", NULL, NULL, 1},
     22          	{MOTOR_KD, MOTOR_SPEED, PID_MOTOR, MOTOR_KI, "Motor_Ki:", NULL, NULL, 2},
     23          
     24          	{DIFF_KI, DIFF_KD, PID_DIFF, DIFF_KP, "Diff_Kp:", NULL, NULL, 0},
     25          	{DIFF_KP, DIFF_KI, PID_DIFF, DIFF_KD, "Diff_kd:", NULL, NULL, 1},
     26          	{DIFF_KD, DIFF_KP, PID_DIFF, DIFF_KI, "Diff_Ki:", NULL, NULL, 2},
     27          	
     28          	{MOTOR_KD, MOTOR_KP, PID_MOTOR, MOTOR_SPEED, "Motor_Speed:", NULL, NULL, 3},
     29          };
     30          

   \                                 In section .text, align 2, keep-with-next
     31          void Menu_Show(void)
     32          {
   \                     Menu_Show: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     33          	uint8 i;
     34          	ListType list = currentList;
   \   00000002   0x....             LDR.N    R0,??DataTable4
   \   00000004   0x7804             LDRB     R4,[R0, #+0]
     35          	uint8 page = (uint8)(menuList[list].indexInPage / 4);
   \   00000006   0x....             LDR.N    R0,??DataTable4_1
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000010   0x7C00             LDRB     R0,[R0, #+16]
   \   00000012   0x2104             MOVS     R1,#+4
   \   00000014   0xFB90 0xF5F1      SDIV     R5,R0,R1
     36          	for(i = 1; i < 5; i++)
   \   00000018   0x2601             MOVS     R6,#+1
   \   0000001A   0xE004             B.N      ??Menu_Show_0
     37          	{
     38          		OLED_ClearLine(i);
   \                     ??Menu_Show_1: (+1)
   \   0000001C   0x0030             MOVS     R0,R6
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x.... 0x....      BL       OLED_ClearLine
     39          	}
   \   00000024   0x1C76             ADDS     R6,R6,#+1
   \                     ??Menu_Show_0: (+1)
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2E05             CMP      R6,#+5
   \   0000002A   0xDBF7             BLT.N    ??Menu_Show_1
     40          	do
     41          	{
     42          		if((uint8)(menuList[list].indexInPage / 4) == page)
   \                     ??Menu_Show_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable4_1
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0x2114             MOVS     R1,#+20
   \   00000032   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000036   0x7C00             LDRB     R0,[R0, #+16]
   \   00000038   0x2104             MOVS     R1,#+4
   \   0000003A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0x42A8             CMP      R0,R5
   \   00000044   0xD119             BNE.N    ??Menu_Show_3
     43          		{
     44          			OLED_ShowString(8, (menuList[list].indexInPage % 4) + 1, menuList[list].str);
   \   00000046   0x....             LDR.N    R0,??DataTable4_1
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2114             MOVS     R1,#+20
   \   0000004C   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000050   0x6842             LDR      R2,[R0, #+4]
   \   00000052   0x....             LDR.N    R0,??DataTable4_1
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0x2114             MOVS     R1,#+20
   \   00000058   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000005C   0x7C00             LDRB     R0,[R0, #+16]
   \   0000005E   0x2104             MOVS     R1,#+4
   \   00000060   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   00000064   0xFB03 0x0311      MLS      R3,R3,R1,R0
   \   00000068   0x1C59             ADDS     R1,R3,#+1
   \   0000006A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006C   0x2008             MOVS     R0,#+8
   \   0000006E   0x.... 0x....      BL       OLED_ShowString
     45          			Menu_Num_Show(list);
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       Menu_Num_Show
     46          		}
     47          		list = menuList[list].next;
   \                     ??Menu_Show_3: (+1)
   \   0000007A   0x....             LDR.N    R0,??DataTable4_1
   \   0000007C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007E   0x2114             MOVS     R1,#+20
   \   00000080   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000084   0x7844             LDRB     R4,[R0, #+1]
     48          	}while(list != currentList);
   \   00000086   0x....             LDR.N    R0,??DataTable4
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x4284             CMP      R4,R0
   \   0000008E   0xD1CD             BNE.N    ??Menu_Show_2
     49          	OLED_ShowChar(0, (menuList[currentList].indexInPage % 4) + 1, '>');
   \   00000090   0x223E             MOVS     R2,#+62
   \   00000092   0x....             LDR.N    R0,??DataTable4_1
   \   00000094   0x....             LDR.N    R1,??DataTable4
   \   00000096   0x7809             LDRB     R1,[R1, #+0]
   \   00000098   0x2314             MOVS     R3,#+20
   \   0000009A   0xFB03 0x0001      MLA      R0,R3,R1,R0
   \   0000009E   0x7C00             LDRB     R0,[R0, #+16]
   \   000000A0   0x2104             MOVS     R1,#+4
   \   000000A2   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   000000A6   0xFB03 0x0311      MLS      R3,R3,R1,R0
   \   000000AA   0x1C59             ADDS     R1,R3,#+1
   \   000000AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x.... 0x....      BL       OLED_ShowChar
     50          }
   \   000000B4   0xBD70             POP      {R4-R6,PC}       ;; return
     51          

   \                                 In section .text, align 2, keep-with-next
     52          void Menu_Num_Show(ListType lst)
     53          {
   \                     Menu_Num_Show: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     54          
     55          	if(NULL != menuList[lst].data)
   \   00000004   0x....             LDR.N    R0,??DataTable4_1
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2114             MOVS     R1,#+20
   \   0000000A   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000000E   0x68C0             LDR      R0,[R0, #+12]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD041             BEQ.N    ??Menu_Num_Show_0
     56          	{
     57          		if(lst >= STEER_KP && lst <= DIFF_KI)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x1F60             SUBS     R0,R4,#+5
   \   00000018   0x2809             CMP      R0,#+9
   \   0000001A   0xD220             BCS.N    ??Menu_Num_Show_1
     58          			OLED_ShowNum(70, (menuList[lst].indexInPage % 4) + 1, (int32)(*((float32 *)menuList[lst].data) * 10), Num_Len);
   \   0000001C   0x2305             MOVS     R3,#+5
   \   0000001E   0x001D             MOVS     R5,R3
   \   00000020   0x....             LDR.N    R0,??DataTable4_1
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x2114             MOVS     R1,#+20
   \   00000026   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000002A   0x68C0             LDR      R0,[R0, #+12]
   \   0000002C   0x6801             LDR      R1,[R0, #+0]
   \   0000002E   0x....             LDR.N    R0,??DataTable4_2  ;; 0x41200000
   \   00000030   0x.... 0x....      BL       __aeabi_fmul
   \   00000034   0x.... 0x....      BL       __aeabi_f2iz
   \   00000038   0x0002             MOVS     R2,R0
   \   0000003A   0x002B             MOVS     R3,R5
   \   0000003C   0x....             LDR.N    R0,??DataTable4_1
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0x2114             MOVS     R1,#+20
   \   00000042   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000046   0x7C00             LDRB     R0,[R0, #+16]
   \   00000048   0x2104             MOVS     R1,#+4
   \   0000004A   0xFB90 0xF4F1      SDIV     R4,R0,R1
   \   0000004E   0xFB04 0x0411      MLS      R4,R4,R1,R0
   \   00000052   0x1C61             ADDS     R1,R4,#+1
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0x2046             MOVS     R0,#+70
   \   00000058   0x.... 0x....      BL       OLED_ShowNum
   \   0000005C   0xE01C             B.N      ??Menu_Num_Show_0
     59          		else if(lst >= MOTOR_SPEED && lst <= MOTOR_SPEED)
   \                     ??Menu_Num_Show_1: (+1)
   \   0000005E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000060   0xF1B4 0x000E      SUBS     R0,R4,#+14
   \   00000064   0x2801             CMP      R0,#+1
   \   00000066   0xD217             BCS.N    ??Menu_Num_Show_0
     60          		  	OLED_ShowNum(70, (menuList[lst].indexInPage % 4) + 1, (int32)(*((int32 *)menuList[lst].data)), Num_Len);
   \   00000068   0x2305             MOVS     R3,#+5
   \   0000006A   0x....             LDR.N    R0,??DataTable4_1
   \   0000006C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006E   0x2114             MOVS     R1,#+20
   \   00000070   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000074   0x68C0             LDR      R0,[R0, #+12]
   \   00000076   0x6802             LDR      R2,[R0, #+0]
   \   00000078   0x....             LDR.N    R0,??DataTable4_1
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2114             MOVS     R1,#+20
   \   0000007E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000082   0x7C00             LDRB     R0,[R0, #+16]
   \   00000084   0x2104             MOVS     R1,#+4
   \   00000086   0xFB90 0xF4F1      SDIV     R4,R0,R1
   \   0000008A   0xFB04 0x0411      MLS      R4,R4,R1,R0
   \   0000008E   0x1C61             ADDS     R1,R4,#+1
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x2046             MOVS     R0,#+70
   \   00000094   0x.... 0x....      BL       OLED_ShowNum
     61          	}
     62          }
   \                     ??Menu_Num_Show_0: (+1)
   \   00000098   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void Menu_Data_Link(void)
     65          {
     66          	menuList[MOTOR_KP].data = (void *)(&(speedCtrler -> Kp));
   \                     Menu_Data_Link: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_3
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable4_1
   \   00000006   0xF8C1 0x00AC      STR      R0,[R1, #+172]
     67          	menuList[MOTOR_KD].data = (void *)(&(speedCtrler -> Kd));
   \   0000000A   0x....             LDR.N    R0,??DataTable4_3
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x1D00             ADDS     R0,R0,#+4
   \   00000010   0x....             LDR.N    R1,??DataTable4_1
   \   00000012   0xF8C1 0x00C0      STR      R0,[R1, #+192]
     68          	menuList[MOTOR_KI].data = (void *)(&(speedCtrler -> Ki));
   \   00000016   0x....             LDR.N    R0,??DataTable4_3
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x3008             ADDS     R0,R0,#+8
   \   0000001C   0x....             LDR.N    R1,??DataTable4_1
   \   0000001E   0xF8C1 0x00D4      STR      R0,[R1, #+212]
     69          
     70          	menuList[STEER_KP].data = (void *)(&(steerCtrler -> Kp));
   \   00000022   0x....             LDR.N    R0,??DataTable4_4
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x....             LDR.N    R1,??DataTable4_1
   \   00000028   0x6708             STR      R0,[R1, #+112]
     71          	menuList[STEER_KD].data = (void *)(&(steerCtrler -> Kd));
   \   0000002A   0x....             LDR.N    R0,??DataTable4_4
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x1D00             ADDS     R0,R0,#+4
   \   00000030   0x....             LDR.N    R1,??DataTable4_1
   \   00000032   0xF8C1 0x0084      STR      R0,[R1, #+132]
     72          	menuList[STEER_KI].data = (void *)(&(steerCtrler -> Ki));
   \   00000036   0x....             LDR.N    R0,??DataTable4_4
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x3008             ADDS     R0,R0,#+8
   \   0000003C   0x....             LDR.N    R1,??DataTable4_1
   \   0000003E   0xF8C1 0x0098      STR      R0,[R1, #+152]
     73          
     74          	menuList[DIFF_KP].data = (void *)(&(differCtrler -> Kp));
   \   00000042   0x....             LDR.N    R0,??DataTable4_5
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x....             LDR.N    R1,??DataTable4_1
   \   00000048   0xF8C1 0x00E8      STR      R0,[R1, #+232]
     75          	menuList[DIFF_KD].data = (void *)(&(differCtrler -> Kd));
   \   0000004C   0x....             LDR.N    R0,??DataTable4_5
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x1D00             ADDS     R0,R0,#+4
   \   00000052   0x....             LDR.N    R1,??DataTable4_1
   \   00000054   0xF8C1 0x00FC      STR      R0,[R1, #+252]
     76          	menuList[DIFF_KI].data = (void *)(&(differCtrler -> Ki));
   \   00000058   0x....             LDR.N    R0,??DataTable4_5
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x3008             ADDS     R0,R0,#+8
   \   0000005E   0x....             LDR.N    R1,??DataTable4_1
   \   00000060   0xF8C1 0x0110      STR      R0,[R1, #+272]
     77          	
     78          	menuList[MOTOR_SPEED].data = (void *)(&PWM_Expect);
   \   00000064   0x....             LDR.N    R0,??DataTable4_6
   \   00000066   0x....             LDR.N    R1,??DataTable4_1
   \   00000068   0xF8C1 0x0124      STR      R0,[R1, #+292]
     79          
     80          }
   \   0000006C   0x4770             BX       LR               ;; return
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void Menu_Data_Increase(ListType lst)
     83          {
   \                     Menu_Data_Increase: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     84          	if(NULL != menuList[lst].data)
   \   00000004   0x....             LDR.N    R0,??DataTable4_1
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2114             MOVS     R1,#+20
   \   0000000A   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000000E   0x68C0             LDR      R0,[R0, #+12]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD02F             BEQ.N    ??Menu_Data_Increase_0
     85          	{
     86          		if(lst >= STEER_KP && lst <= DIFF_KI)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x1F60             SUBS     R0,R4,#+5
   \   00000018   0x2809             CMP      R0,#+9
   \   0000001A   0xD216             BCS.N    ??Menu_Data_Increase_1
     87          			*((float32 *)menuList[lst].data) += 0.1;
   \   0000001C   0x....             LDR.N    R0,??DataTable4_1
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2114             MOVS     R1,#+20
   \   00000022   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000026   0x68C0             LDR      R0,[R0, #+12]
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x.... 0x....      BL       __aeabi_f2d
   \   0000002E   0x....             LDR.N    R2,??DataTable4_7  ;; 0x9999999a
   \   00000030   0x....             LDR.N    R3,??DataTable4_8  ;; 0x3fb99999
   \   00000032   0x.... 0x....      BL       __aeabi_dadd
   \   00000036   0x.... 0x....      BL       __aeabi_d2f
   \   0000003A   0x....             LDR.N    R1,??DataTable4_1
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2214             MOVS     R2,#+20
   \   00000040   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000044   0x68C9             LDR      R1,[R1, #+12]
   \   00000046   0x6008             STR      R0,[R1, #+0]
   \   00000048   0xE014             B.N      ??Menu_Data_Increase_0
     88          		else if(lst >= MOTOR_SPEED && lst <= MOTOR_SPEED)
   \                     ??Menu_Data_Increase_1: (+1)
   \   0000004A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004C   0xF1B4 0x000E      SUBS     R0,R4,#+14
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD20F             BCS.N    ??Menu_Data_Increase_0
     89          		  	*((int32 *)menuList[lst].data) += 1000;
   \   00000054   0x....             LDR.N    R0,??DataTable4_1
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2114             MOVS     R1,#+20
   \   0000005A   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000005E   0x68C0             LDR      R0,[R0, #+12]
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF510 0x707A      ADDS     R0,R0,#+1000
   \   00000066   0x....             LDR.N    R1,??DataTable4_1
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0x2214             MOVS     R2,#+20
   \   0000006C   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000070   0x68C9             LDR      R1,[R1, #+12]
   \   00000072   0x6008             STR      R0,[R1, #+0]
     90          	}
     91          }
   \                     ??Menu_Data_Increase_0: (+1)
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
     92          

   \                                 In section .text, align 2, keep-with-next
     93          void Menu_Data_Decrease(ListType lst)
     94          {
   \                     Menu_Data_Decrease: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     95          	if(NULL != menuList[lst].data)
   \   00000004   0x....             LDR.N    R0,??DataTable4_1
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2114             MOVS     R1,#+20
   \   0000000A   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000000E   0x68C0             LDR      R0,[R0, #+12]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD02F             BEQ.N    ??Menu_Data_Decrease_0
     96          	{
     97          		if(lst >= STEER_KP && lst <= DIFF_KI)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x1F60             SUBS     R0,R4,#+5
   \   00000018   0x2809             CMP      R0,#+9
   \   0000001A   0xD216             BCS.N    ??Menu_Data_Decrease_1
     98          			*((float32 *)menuList[lst].data) -= 0.1 ;
   \   0000001C   0x....             LDR.N    R0,??DataTable4_1
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2114             MOVS     R1,#+20
   \   00000022   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000026   0x68C0             LDR      R0,[R0, #+12]
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x.... 0x....      BL       __aeabi_f2d
   \   0000002E   0x....             LDR.N    R2,??DataTable4_7  ;; 0x9999999a
   \   00000030   0x....             LDR.N    R3,??DataTable4_9  ;; 0xbfb99999
   \   00000032   0x.... 0x....      BL       __aeabi_dadd
   \   00000036   0x.... 0x....      BL       __aeabi_d2f
   \   0000003A   0x....             LDR.N    R1,??DataTable4_1
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2214             MOVS     R2,#+20
   \   00000040   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000044   0x68C9             LDR      R1,[R1, #+12]
   \   00000046   0x6008             STR      R0,[R1, #+0]
   \   00000048   0xE014             B.N      ??Menu_Data_Decrease_0
     99          		else if(lst >= MOTOR_SPEED && lst <= MOTOR_SPEED)
   \                     ??Menu_Data_Decrease_1: (+1)
   \   0000004A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004C   0xF1B4 0x000E      SUBS     R0,R4,#+14
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD20F             BCS.N    ??Menu_Data_Decrease_0
    100          		  	*((int32 *)menuList[lst].data) -= 1000;
   \   00000054   0x....             LDR.N    R0,??DataTable4_1
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2114             MOVS     R1,#+20
   \   0000005A   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000005E   0x68C0             LDR      R0,[R0, #+12]
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   00000066   0x....             LDR.N    R1,??DataTable4_1
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0x2214             MOVS     R2,#+20
   \   0000006C   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000070   0x68C9             LDR      R1,[R1, #+12]
   \   00000072   0x6008             STR      R0,[R1, #+0]
    101          	}
    102          }
   \                     ??Menu_Data_Decrease_0: (+1)
   \   00000074   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     currentList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     menuList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     speedCtrler

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     steerCtrler

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     differCtrler

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     PWM_Expect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x3FB99999         DC32     0x3fb99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0xBFB99999         DC32     0xbfb99999

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x44 0x65          DC8 "Debug Mode"
   \              0x62 0x75    
   \              0x67 0x20    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x52 0x61          DC8 "Race Mode"
   \              0x63 0x65    
   \              0x20 0x4D    
   \              0x6F 0x64    
   \              0x65 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x53 0x74          DC8 "Steer"
   \              0x65 0x65    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x4D 0x6F          DC8 "Motor"
   \              0x74 0x6F    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x44 0x69          DC8 "Diff"
   \              0x66 0x66    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x53 0x74          DC8 "Steer_Kp:"
   \              0x65 0x65    
   \              0x72 0x5F    
   \              0x4B 0x70    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x53 0x74          DC8 "Steer_kd:"
   \              0x65 0x65    
   \              0x72 0x5F    
   \              0x6B 0x64    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x53 0x74          DC8 "Steer_Ki:"
   \              0x65 0x65    
   \              0x72 0x5F    
   \              0x4B 0x69    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x4D 0x6F          DC8 "Motro_Kp:"
   \              0x74 0x72    
   \              0x6F 0x5F    
   \              0x4B 0x70    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x4D 0x6F          DC8 "Motor_kd:"
   \              0x74 0x6F    
   \              0x72 0x5F    
   \              0x6B 0x64    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x4D 0x6F          DC8 "Motor_Ki:"
   \              0x74 0x6F    
   \              0x72 0x5F    
   \              0x4B 0x69    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x44 0x69          DC8 "Diff_Kp:"
   \              0x66 0x66    
   \              0x5F 0x4B    
   \              0x70 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x44 0x69          DC8 "Diff_kd:"
   \              0x66 0x66    
   \              0x5F 0x6B    
   \              0x64 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x44 0x69          DC8 "Diff_Ki:"
   \              0x66 0x66    
   \              0x5F 0x4B    
   \              0x69 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x4D 0x6F          DC8 "Motor_Speed:"
   \              0x74 0x6F    
   \              0x72 0x5F    
   \              0x53 0x70    
   \              0x65 0x65    
   \              0x64 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Menu_Data_Decrease
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_f2d
       8   Menu_Data_Increase
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_f2d
       0   Menu_Data_Link
      16   Menu_Num_Show
        16   -> OLED_ShowNum
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
      16   Menu_Show
        16   -> Menu_Num_Show
        16   -> OLED_ClearLine
        16   -> OLED_ShowChar
        16   -> OLED_ShowString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      12  ?_0
      12  ?_1
      12  ?_10
      12  ?_11
      12  ?_12
      12  ?_13
      16  ?_14
       8  ?_2
       8  ?_3
       8  ?_4
      12  ?_5
      12  ?_6
      12  ?_7
      12  ?_8
      12  ?_9
     118  Menu_Data_Decrease
     118  Menu_Data_Increase
     110  Menu_Data_Link
     154  Menu_Num_Show
     182  Menu_Show
       1  currentList
     300  menuList

 
   1 byte  in section .bss
 300 bytes in section .data
 172 bytes in section .rodata
 722 bytes in section .text
 
 722 bytes of CODE  memory
 172 bytes of CONST memory
 301 bytes of DATA  memory

Errors: none
Warnings: none
