###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        11/May/2016  19:10:53
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\oled.c
#    Command line =  
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\oled.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\
#        -lB
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\
#        -o
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\app\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\app\Source\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\CPU\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\common\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\HW\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\FatFs\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\FatFs\option\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\common\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\driver\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\descriptor\
#        -I
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\List\oled.lst
#    Object file  =  
#        E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\iar\FLASH\Obj\oled.o
#
###############################################################################

E:\11届Freescale\Gold_Razor_A\Gold_Razor_A\project\Gold_Razor_A\app\Source\oled.c
      1          //////////////////////////////////////////////////////////////////////////////////
      2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
      3          //中景园电子
      4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
      5          //
      6          //  文 件 名   : main.c
      7          //  版 本 号   : v2.0
      8          //  作    者   : HuangKai
      9          //  生成日期   : 2014-0101
     10          //  最近修改   :
     11          //  功能描述   : OLED 4接口演示例程(51系列)
     12          //              说明:
     13          //              ----------------------------------------------------------------
     14          //              GND    电源地
     15          //              VCC  接5V或3.3v电源
     16          //              D0   P1^0（SCL）
     17          //              D1   P1^1（SDA）
     18          //              RES  接P12
     19          //              DC   接P13
     20          //              CS   接P14
     21          //              ----------------------------------------------------------------
     22          // 修改历史   :
     23          // 日    期   :
     24          // 作    者   : HuangKai
     25          // 修改内容   : 创建文件
     26          //版权所有，盗版必究。
     27          //Copyright(C) 中景园电子2014/3/16
     28          //All rights reserved
     29          //******************************************************************************/。
     30          #include "oled.h"
     31          //#include "stdlib.h"
     32          #include "oledfont.h"

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const F6x8[92][6]
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const F8X16[1520]
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
     33          //#include "delay.h"
     34          //OLED的显存
     35          //存放格式如下.
     36          //[0]0 1 2 3 ... 127
     37          //[1]0 1 2 3 ... 127
     38          //[2]0 1 2 3 ... 127
     39          //[3]0 1 2 3 ... 127
     40          //[4]0 1 2 3 ... 127
     41          //[5]0 1 2 3 ... 127
     42          //[6]0 1 2 3 ... 127
     43          //[7]0 1 2 3 ... 127

   \                                 In section .text, align 2, keep-with-next
     44          void delay_ms(unsigned int ms)
     45          {
   \                     delay_ms: (+1)
   \   00000000   0xE006             B.N      ??delay_ms_0
     46          	unsigned int a;
     47          	while (ms)
     48          	{
     49          		a = 1800;
   \                     ??delay_ms_1: (+1)
   \   00000002   0xF44F 0x61E1      MOV      R1,#+1800
     50          		while (a--);
   \                     ??delay_ms_2: (+1)
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x1E51             SUBS     R1,R2,#+1
   \   0000000A   0x2A00             CMP      R2,#+0
   \   0000000C   0xD1FB             BNE.N    ??delay_ms_2
     51          		ms--;
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
     52          	}
   \                     ??delay_ms_0: (+1)
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD1F6             BNE.N    ??delay_ms_1
     53          	return;
   \   00000014   0x4770             BX       LR               ;; return
     54          }
     55          #if OLED_MODE==1
     56          //向SSD1106写入一个字节。
     57          //dat:要写入的数据/命令
     58          //cmd:数据/命令标志 0,表示命令;1,表示数据;
     59          void OLED_WR_Byte(u8 dat, u8 cmd)
     60          {
     61          	DATAOUT(dat);
     62          	if (cmd)
     63          		OLED_DC_Set();
     64          	else
     65          		OLED_DC_Clr();
     66          	OLED_CS_Clr();
     67          	OLED_WR_Clr();
     68          	OLED_WR_Set();
     69          	OLED_CS_Set();
     70          	OLED_DC_Set();
     71          }
     72          #else
     73          //向SSD1306写入一个字节。
     74          //dat:要写入的数据/命令
     75          //cmd:数据/命令标志 0,表示命令;1,表示数据;

   \                                 In section .text, align 2, keep-with-next
     76          void OLED_WR_Byte(u8 dat, u8 cmd)
     77          {
   \                     OLED_WR_Byte: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     78          	u8 i;
     79          	if (cmd)
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD006             BEQ.N    ??OLED_WR_Byte_0
     80          		OLED_DC_Set();
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x2109             MOVS     R1,#+9
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x400ff0c0
   \   00000012   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000016   0xE005             B.N      ??OLED_WR_Byte_1
     81          	else
     82          		OLED_DC_Clr();
   \                     ??OLED_WR_Byte_0: (+1)
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2109             MOVS     R1,#+9
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x400ff0c0
   \   00000020   0x.... 0x....      BL       LPLD_GPIO_Output_b
     83          	OLED_CS_Clr();
   \                     ??OLED_WR_Byte_1: (+1)
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2108             MOVS     R1,#+8
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x400ff0c0
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Output_b
     84          	for (i = 0; i<8; i++)
   \   00000030   0x2500             MOVS     R5,#+0
   \   00000032   0xE00D             B.N      ??OLED_WR_Byte_2
     85          	{
     86          		OLED_SCLK_Clr();
     87          		if (dat & 0x80)
     88          			OLED_SDIN_Set();
     89          		else
     90          			OLED_SDIN_Clr();
   \                     ??OLED_WR_Byte_3: (+1)
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2114             MOVS     R1,#+20
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400ff040
   \   0000003C   0x.... 0x....      BL       LPLD_GPIO_Output_b
     91          		OLED_SCLK_Set();
   \                     ??OLED_WR_Byte_4: (+1)
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x2115             MOVS     R1,#+21
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400ff040
   \   00000048   0x.... 0x....      BL       LPLD_GPIO_Output_b
     92          		dat <<= 1;
   \   0000004C   0x0064             LSLS     R4,R4,#+1
   \   0000004E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_WR_Byte_2: (+1)
   \   00000050   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000052   0x2D08             CMP      R5,#+8
   \   00000054   0xDA0E             BGE.N    ??OLED_WR_Byte_5
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x2115             MOVS     R1,#+21
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400ff040
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0x0620             LSLS     R0,R4,#+24
   \   00000064   0xD5E6             BPL.N    ??OLED_WR_Byte_3
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x2114             MOVS     R1,#+20
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400ff040
   \   0000006E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000072   0xE7E5             B.N      ??OLED_WR_Byte_4
     93          	}
     94          
     95          	OLED_SCLK_Clr();
   \                     ??OLED_WR_Byte_5: (+1)
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x2115             MOVS     R1,#+21
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400ff040
   \   0000007C   0x.... 0x....      BL       LPLD_GPIO_Output_b
     96          	OLED_CS_Set();
   \   00000080   0x2201             MOVS     R2,#+1
   \   00000082   0x2108             MOVS     R1,#+8
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x400ff0c0
   \   00000088   0x.... 0x....      BL       LPLD_GPIO_Output_b
     97          	OLED_DC_Set();
   \   0000008C   0x2201             MOVS     R2,#+1
   \   0000008E   0x2109             MOVS     R1,#+9
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x400ff0c0
   \   00000094   0x.... 0x....      BL       LPLD_GPIO_Output_b
     98          }
   \   00000098   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     99          
    100          #endif

   \                                 In section .text, align 2, keep-with-next
    101          void OLED_Set_Pos(unsigned char x, unsigned char y)
    102          {
   \                     OLED_Set_Pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0008             MOVS     R0,R1
    103          	OLED_WR_Byte(0xb0 + y, OLED_CMD);
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x3850             SUBS     R0,R0,#+80
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       OLED_WR_Byte
    104          	OLED_WR_Byte(((x & 0xf0) >> 4) | 0x10, OLED_CMD);
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x0920             LSRS     R0,R4,#+4
   \   00000016   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x.... 0x....      BL       OLED_WR_Byte
    105          	OLED_WR_Byte((x & 0x0f), OLED_CMD);
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000026   0x.... 0x....      BL       OLED_WR_Byte
    106          }
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    107          //开启OLED显示

   \                                 In section .text, align 2, keep-with-next
    108          void OLED_Display_On(void)
    109          {
   \                     OLED_Display_On: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    110          	OLED_WR_Byte(0X8D, OLED_CMD);  //SET DCDC命令
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x208D             MOVS     R0,#+141
   \   00000006   0x.... 0x....      BL       OLED_WR_Byte
    111          	OLED_WR_Byte(0X14, OLED_CMD);  //DCDC ON
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2014             MOVS     R0,#+20
   \   0000000E   0x.... 0x....      BL       OLED_WR_Byte
    112          	OLED_WR_Byte(0XAF, OLED_CMD);  //DISPLAY ON
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x20AF             MOVS     R0,#+175
   \   00000016   0x.... 0x....      BL       OLED_WR_Byte
    113          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    114          //关闭OLED显示

   \                                 In section .text, align 2, keep-with-next
    115          void OLED_Display_Off(void)
    116          {
   \                     OLED_Display_Off: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    117          	OLED_WR_Byte(0X8D, OLED_CMD);  //SET DCDC命令
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x208D             MOVS     R0,#+141
   \   00000006   0x.... 0x....      BL       OLED_WR_Byte
    118          	OLED_WR_Byte(0X10, OLED_CMD);  //DCDC OFF
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2010             MOVS     R0,#+16
   \   0000000E   0x.... 0x....      BL       OLED_WR_Byte
    119          	OLED_WR_Byte(0XAE, OLED_CMD);  //DISPLAY OFF
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x20AE             MOVS     R0,#+174
   \   00000016   0x.... 0x....      BL       OLED_WR_Byte
    120          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    121          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!

   \                                 In section .text, align 2, keep-with-next
    122          void OLED_Clear(void)
    123          {
   \                     OLED_Clear: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    124          	u8 i, n;
    125          	for (i = 0; i<8; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE008             B.N      ??OLED_Clear_0
    126          	{
    127          		OLED_WR_Byte(0xb0 + i, OLED_CMD);    //设置页地址（0~7）
    128          		OLED_WR_Byte(0x00, OLED_CMD);      //设置显示位置―列低地址
    129          		OLED_WR_Byte(0x10, OLED_CMD);      //设置显示位置―列高地址
    130          		for (n = 0; n<128; n++)OLED_WR_Byte(0, OLED_DATA);
   \                     ??OLED_Clear_1: (+1)
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       OLED_WR_Byte
   \   0000000E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_Clear_2: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D80             CMP      R5,#+128
   \   00000014   0xDBF7             BLT.N    ??OLED_Clear_1
   \   00000016   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_Clear_0: (+1)
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C08             CMP      R4,#+8
   \   0000001C   0xDA0F             BGE.N    ??OLED_Clear_3
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       OLED_WR_Byte
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       OLED_WR_Byte
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x2010             MOVS     R0,#+16
   \   00000036   0x.... 0x....      BL       OLED_WR_Byte
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE7E8             B.N      ??OLED_Clear_2
    131          	} //更新显示
    132          }
   \                     ??OLED_Clear_3: (+1)
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void OLED_ClearLine(u8 y)
    135          {
   \                     OLED_ClearLine: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    136          	unsigned char i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    137          	if (SIZE == 16)
    138          	{
    139          		OLED_Set_Pos(0, y);
    140          		for (i = 0; i<128; i++)
    141          			OLED_WR_Byte(0x00, OLED_DATA);
    142          		OLED_Set_Pos(0, y + 1);
    143          		for (i = 0; i<128; i++)
    144          			OLED_WR_Byte(0x00, OLED_DATA);
    145          	}
    146          	else {
    147          		OLED_Set_Pos(0, y + 1);
   \   00000004   0x1C41             ADDS     R1,R0,#+1
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       OLED_Set_Pos
    148          		for (i = 0; i<128; i++)
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0xE004             B.N      ??OLED_ClearLine_0
    149          			OLED_WR_Byte(0x00, OLED_DATA);
   \                     ??OLED_ClearLine_1: (+1)
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       OLED_WR_Byte
   \   0000001A   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_ClearLine_0: (+1)
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x2C80             CMP      R4,#+128
   \   00000020   0xDBF7             BLT.N    ??OLED_ClearLine_1
    150          
    151          	}
    152          }
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
    153          

   \                                 In section .text, align 2, keep-with-next
    154          void OLED_DrawPoint(u8 x, u8 y, u8 cmd)
    155          {
   \                     OLED_DrawPoint: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    156          	static uint8 imgMap[8][128] = { 0 };
    157          	uint8 i, j;
    158          	if (cmd)
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD036             BEQ.N    ??OLED_DrawPoint_0
    159          	{
    160          
    161          		imgMap[y / 8][x] = imgMap[y / 8][x] | (0x01 << (y % 8));
   \   0000000C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   00000014   0x2180             MOVS     R1,#+128
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable4_2
   \   0000001A   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB95 0xF1F1      SDIV     R1,R5,R1
   \   00000028   0x2280             MOVS     R2,#+128
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable4_2
   \   0000002E   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   00000032   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000034   0x5C61             LDRB     R1,[R4, R1]
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x2308             MOVS     R3,#+8
   \   0000003C   0xFB95 0xF6F3      SDIV     R6,R5,R3
   \   00000040   0xFB06 0x5613      MLS      R6,R6,R3,R5
   \   00000044   0x40B2             LSLS     R2,R2,R6
   \   00000046   0x4311             ORRS     R1,R2,R1
   \   00000048   0x5421             STRB     R1,[R4, R0]
    162          		OLED_Set_Pos(x, y / 8);
   \   0000004A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004C   0x2008             MOVS     R0,#+8
   \   0000004E   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   00000052   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0x.... 0x....      BL       OLED_Set_Pos
    163          		OLED_WR_Byte(imgMap[y / 8][x], OLED_DATA);
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000060   0x2008             MOVS     R0,#+8
   \   00000062   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   00000066   0x2280             MOVS     R2,#+128
   \   00000068   0x.... 0x....      LDR.W    R3,??DataTable4_2
   \   0000006C   0xFB02 0x3000      MLA      R0,R2,R0,R3
   \   00000070   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000072   0x5C20             LDRB     R0,[R4, R0]
   \   00000074   0x.... 0x....      BL       OLED_WR_Byte
    164          	}
    165          	else
    166          	{
    167          
    168          		for (i = 0; i < 8; i++)
    169          		for (j = 0; j < 128; j++)
    170          		{
    171          			imgMap[i][j] = 0x00;
    172          			OLED_Set_Pos(j, i);
    173          			OLED_WR_Byte(imgMap[i][j], OLED_DATA);
    174          		}
    175          	}
    176          
    177          }
   \                     ??OLED_DrawPoint_1: (+1)
   \   00000078   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??OLED_DrawPoint_0: (+1)
   \   0000007A   0x2400             MOVS     R4,#+0
   \   0000007C   0xE01C             B.N      ??OLED_DrawPoint_2
   \                     ??OLED_DrawPoint_3: (+1)
   \   0000007E   0x....             LDR.N    R0,??DataTable4_2
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0x2180             MOVS     R1,#+128
   \   00000084   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000088   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x5429             STRB     R1,[R5, R0]
   \   0000008E   0x0021             MOVS     R1,R4
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x0028             MOVS     R0,R5
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x.... 0x....      BL       OLED_Set_Pos
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0x....             LDR.N    R0,??DataTable4_2
   \   0000009E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A0   0x2280             MOVS     R2,#+128
   \   000000A2   0xFB02 0x0004      MLA      R0,R2,R4,R0
   \   000000A6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A8   0x5C28             LDRB     R0,[R5, R0]
   \   000000AA   0x.... 0x....      BL       OLED_WR_Byte
   \   000000AE   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_DrawPoint_4: (+1)
   \   000000B0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B2   0x2D80             CMP      R5,#+128
   \   000000B4   0xDBE3             BLT.N    ??OLED_DrawPoint_3
   \   000000B6   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_DrawPoint_2: (+1)
   \   000000B8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BA   0x2C08             CMP      R4,#+8
   \   000000BC   0xDADC             BGE.N    ??OLED_DrawPoint_1
   \   000000BE   0x2500             MOVS     R5,#+0
   \   000000C0   0xE7F6             B.N      ??OLED_DrawPoint_4

   \                                 In section .bss, align 4
   \                     ??imgMap:
   \   00000000                      DS8 1024
    178          
    179          
    180          //在指定位置显示一个字符,包括部分字符
    181          //x:0~127
    182          //y:0~63
    183          //mode:0,反白显示;1,正常显示
    184          //size:选择字体 16/12

   \                                 In section .text, align 2, keep-with-next
    185          void OLED_ShowChar(u8 x, u8 y, u8 chr)
    186          {
   \                     OLED_ShowChar: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    187          	unsigned char c = 0, i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
    188          	c = chr - ' ';//得到偏移后的值
   \   00000006   0xF1B2 0x0420      SUBS     R4,R2,#+32
    189          	if (x>Max_Column - 1){ x = 0; y = y + 2; }
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x2880             CMP      R0,#+128
   \   0000000E   0xDB01             BLT.N    ??OLED_ShowChar_0
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x1C89             ADDS     R1,R1,#+2
    190          	if (SIZE == 16)
    191          	{
    192          		OLED_Set_Pos(x, y);
    193          		for (i = 0; i<8; i++)
    194          			OLED_WR_Byte(F8X16[c * 16 + i], OLED_DATA);
    195          		OLED_Set_Pos(x, y + 1);
    196          		for (i = 0; i<8; i++)
    197          			OLED_WR_Byte(F8X16[c * 16 + i + 8], OLED_DATA);
    198          	}
    199          	else {
    200          		OLED_Set_Pos(x, y + 1);
   \                     ??OLED_ShowChar_0: (+1)
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       OLED_Set_Pos
    201          		for (i = 0; i<6; i++)
   \   0000001E   0x2500             MOVS     R5,#+0
   \   00000020   0xE00A             B.N      ??OLED_ShowChar_1
    202          			OLED_WR_Byte(F6x8[c][i], OLED_DATA);
   \                     ??OLED_ShowChar_2: (+1)
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x....             LDR.N    R0,??DataTable4_3
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x2206             MOVS     R2,#+6
   \   0000002A   0xFB02 0x0004      MLA      R0,R2,R4,R0
   \   0000002E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000030   0x5C28             LDRB     R0,[R5, R0]
   \   00000032   0x.... 0x....      BL       OLED_WR_Byte
   \   00000036   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_ShowChar_1: (+1)
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x2D06             CMP      R5,#+6
   \   0000003C   0xDBF1             BLT.N    ??OLED_ShowChar_2
    203          
    204          	}
    205          }
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    206          
    207          
    208          //m^n函数

   \                                 In section .text, align 2, keep-with-next
    209          u32 oled_pow(u8 m, u8 n)
    210          {
    211          	u32 result = 1;
   \                     oled_pow: (+1)
   \   00000000   0x2201             MOVS     R2,#+1
   \   00000002   0xE001             B.N      ??oled_pow_0
    212          	while (n--)result *= m;
   \                     ??oled_pow_1: (+1)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x4342             MULS     R2,R0,R2
   \                     ??oled_pow_0: (+1)
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x1E59             SUBS     R1,R3,#+1
   \   0000000C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   0x2B00             CMP      R3,#+0
   \   00000010   0xD1F8             BNE.N    ??oled_pow_1
    213          	return result;
   \   00000012   0x0010             MOVS     R0,R2
   \   00000014   0x4770             BX       LR               ;; return
    214          }
    215          //显示2个数字
    216          //x,y :起点坐标
    217          //len :数字的位数
    218          //size:字体大小
    219          //mode:模式	0,填充模式;1,叠加模式
    220          //num:数值(0~4294967295);

   \                                 In section .text, align 2, keep-with-next
    221          void OLED_ShowNum(u8 x, u8 y, int32 num, u8 len)
    222          {
   \                     OLED_ShowNum: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    223          	u8 t, temp;
    224          	u8 enshow = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    225          
    226          	for (t = 0; t<len; t++)
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE022             B.N      ??OLED_ShowNum_0
    227          	{
    228          		temp = ((num >= 0 ? num : -num) / oled_pow(10, len - t - 1)) % 10;
    229          		if (enshow == 0 && t<(len - 1))
    230          		{
    231          			if (temp == 0)
    232          			{
    233          				OLED_ShowChar(x + (Num_Size / 2)*t, y, ' ');
    234          				continue;
    235          			}
    236          			else
    237          			{
    238          				if(num < 0)
   \                     ??OLED_ShowNum_1: (+1)
   \   00000016   0x2E00             CMP      R6,#+0
   \   00000018   0xD50D             BPL.N    ??OLED_ShowNum_2
    239          					OLED_ShowChar(x + (Num_Size / 2)*(t - 1), y, '-');
   \   0000001A   0x222D             MOVS     R2,#+45
   \   0000001C   0x0029             MOVS     R1,R5
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF1B9 0x0001      SUBS     R0,R9,#+1
   \   00000028   0x2306             MOVS     R3,#+6
   \   0000002A   0x4358             MULS     R0,R3,R0
   \   0000002C   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x.... 0x....      BL       OLED_ShowChar
    240          				enshow = 1;
   \                     ??OLED_ShowNum_2: (+1)
   \   00000036   0xF05F 0x0801      MOVS     R8,#+1
    241          			}
    242          
    243          		}
    244          		OLED_ShowChar(x + (Num_Size / 2)*t, y, temp + '0');
   \                     ??OLED_ShowNum_3: (+1)
   \   0000003A   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   0000003E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000040   0x0029             MOVS     R1,R5
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000048   0x2006             MOVS     R0,#+6
   \   0000004A   0xFB00 0xF009      MUL      R0,R0,R9
   \   0000004E   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x.... 0x....      BL       OLED_ShowChar
   \                     ??OLED_ShowNum_4: (+1)
   \   00000058   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??OLED_ShowNum_0: (+1)
   \   0000005C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000060   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000062   0x45B9             CMP      R9,R7
   \   00000064   0xD231             BCS.N    ??OLED_ShowNum_5
   \   00000066   0x2E00             CMP      R6,#+0
   \   00000068   0xD401             BMI.N    ??OLED_ShowNum_6
   \   0000006A   0x46B2             MOV      R10,R6
   \   0000006C   0xE001             B.N      ??OLED_ShowNum_7
   \                     ??OLED_ShowNum_6: (+1)
   \   0000006E   0xF1D6 0x0A00      RSBS     R10,R6,#+0
   \                     ??OLED_ShowNum_7: (+1)
   \   00000072   0xEBB7 0x0009      SUBS     R0,R7,R9
   \   00000076   0x1E41             SUBS     R1,R0,#+1
   \   00000078   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007A   0x200A             MOVS     R0,#+10
   \   0000007C   0x.... 0x....      BL       oled_pow
   \   00000080   0xFBBA 0xF0F0      UDIV     R0,R10,R0
   \   00000084   0x210A             MOVS     R1,#+10
   \   00000086   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000008A   0xFB01 0x0A12      MLS      R10,R1,R2,R0
   \   0000008E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000092   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000096   0xD1D0             BNE.N    ??OLED_ShowNum_3
   \   00000098   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000009C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000009E   0x1E78             SUBS     R0,R7,#+1
   \   000000A0   0x4581             CMP      R9,R0
   \   000000A2   0xDACA             BGE.N    ??OLED_ShowNum_3
   \   000000A4   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000A8   0xF1BA 0x0F00      CMP      R10,#+0
   \   000000AC   0xD1B3             BNE.N    ??OLED_ShowNum_1
   \   000000AE   0x2220             MOVS     R2,#+32
   \   000000B0   0x0029             MOVS     R1,R5
   \   000000B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B4   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000B8   0x2006             MOVS     R0,#+6
   \   000000BA   0xFB00 0xF009      MUL      R0,R0,R9
   \   000000BE   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   000000C2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C4   0x.... 0x....      BL       OLED_ShowChar
   \   000000C8   0xE7C6             B.N      ??OLED_ShowNum_4
    245          	}
    246          
    247          }
   \                     ??OLED_ShowNum_5: (+1)
   \   000000CA   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
    248          void OLED_NumClear(u8 x, u8 y, u8 len)
    249          {
   \                     OLED_NumClear: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    250          	u8 t;
    251          	for (t = 0; t<len; t++)
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE00C             B.N      ??OLED_NumClear_0
    252          	{
    253          		OLED_ShowChar(x + (Num_Size / 2)*t, y, ' ');
   \                     ??OLED_NumClear_1: (+1)
   \   0000000C   0x2220             MOVS     R2,#+32
   \   0000000E   0x0029             MOVS     R1,R5
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000014   0x2006             MOVS     R0,#+6
   \   00000016   0xFB00 0xF007      MUL      R0,R0,R7
   \   0000001A   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x.... 0x....      BL       OLED_ShowChar
    254          	}
   \   00000024   0x1C7F             ADDS     R7,R7,#+1
   \                     ??OLED_NumClear_0: (+1)
   \   00000026   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x42B7             CMP      R7,R6
   \   0000002C   0xD3EE             BCC.N    ??OLED_NumClear_1
    255          
    256          }
   \   0000002E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    257          
    258          //显示一个字符号串

   \                                 In section .text, align 2, keep-with-next
    259          void OLED_ShowString(u8 x, u8 y, u8 *chr)
    260          {
   \                     OLED_ShowString: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    261          	unsigned char j = 0;
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE00E             B.N      ??OLED_ShowString_0
    262          	while (chr[j] != '\0')
    263          	{
    264          		OLED_ShowChar(x, y, chr[j]);
   \                     ??OLED_ShowString_1: (+1)
   \   0000000C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000E   0x5DBA             LDRB     R2,[R7, R6]
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_ShowChar
    265          		x += 8;
   \   0000001C   0x3408             ADDS     R4,R4,#+8
    266          		if (x>120){ x = 0; y += 2; }
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2C79             CMP      R4,#+121
   \   00000022   0xDB01             BLT.N    ??OLED_ShowString_2
   \   00000024   0x2400             MOVS     R4,#+0
   \   00000026   0x1CAD             ADDS     R5,R5,#+2
    267          		j++;
   \                     ??OLED_ShowString_2: (+1)
   \   00000028   0x1C7F             ADDS     R7,R7,#+1
    268          	}
   \                     ??OLED_ShowString_0: (+1)
   \   0000002A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000002C   0x5DB8             LDRB     R0,[R7, R6]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD1EC             BNE.N    ??OLED_ShowString_1
    269          }
   \   00000032   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    270          
    271          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/

   \                                 In section .text, align 2, keep-with-next
    272          void OLED_DrawBMP(unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, const unsigned char BMP[])
    273          {
   \                     OLED_DrawBMP: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    274          	unsigned int j = 0;
   \   0000000C   0xF05F 0x0900      MOVS     R9,#+0
    275          	unsigned char x, y;
    276          	for (y = y0; y<y1; y++)
   \   00000010   0xF8DD 0x8020      LDR      R8,[SP, #+32]
   \   00000014   0xE00E             B.N      ??OLED_DrawBMP_0
    277          	{
    278          		OLED_Set_Pos(x0, y);
    279          		for (x = x0; x<x1; x++)
    280          		{
    281          			OLED_WR_Byte(BMP[j++], OLED_DATA);
   \                     ??OLED_DrawBMP_1: (+1)
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0xF819 0x0008      LDRB     R0,[R9, R8]
   \   0000001C   0x.... 0x....      BL       OLED_WR_Byte
   \   00000020   0xF119 0x0901      ADDS     R9,R9,#+1
    282          		}
   \   00000024   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??OLED_DrawBMP_2: (+1)
   \   00000028   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000002C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   0x45B2             CMP      R10,R6
   \   00000030   0xD3F1             BCC.N    ??OLED_DrawBMP_1
   \   00000032   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_DrawBMP_0: (+1)
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x42BD             CMP      R5,R7
   \   0000003A   0xD207             BCS.N    ??OLED_DrawBMP_3
   \   0000003C   0x0029             MOVS     R1,R5
   \   0000003E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000040   0x0020             MOVS     R0,R4
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x.... 0x....      BL       OLED_Set_Pos
   \   00000048   0x46A2             MOV      R10,R4
   \   0000004A   0xE7ED             B.N      ??OLED_DrawBMP_2
    283          	}
    284          }
   \                     ??OLED_DrawBMP_3: (+1)
   \   0000004C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
    285          void OLED_PinInit(void)
    286          {
   \                     OLED_PinInit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    287          
    288          	GPIO_InitTypeDef gpio_init_struct;
    289          	gpio_init_struct.GPIO_PTx = PTB;
   \   00000004   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff040
   \   00000006   0x9001             STR      R0,[SP, #+4]
    290          	gpio_init_struct.GPIO_Pins = GPIO_Pin20 | GPIO_Pin21 | GPIO_Pin22;
   \   00000008   0xF45F 0x00E0      MOVS     R0,#+7340032
   \   0000000C   0x9002             STR      R0,[SP, #+8]
    291          	gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xF88D 0x0010      STRB     R0,[SP, #+16]
    292          	gpio_init_struct.GPIO_Output = OUTPUT_H;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0011      STRB     R0,[SP, #+17]
    293          	gpio_init_struct.GPIO_PinControl = IRQC_DIS;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9003             STR      R0,[SP, #+12]
    294          	LPLD_GPIO_Init(gpio_init_struct);
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Init
    295          
    296          	gpio_init_struct.GPIO_PTx = PTD;
   \   00000030   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff0c0
   \   00000032   0x9001             STR      R0,[SP, #+4]
    297          	gpio_init_struct.GPIO_Pins = GPIO_Pin8 | GPIO_Pin9;
   \   00000034   0xF44F 0x7040      MOV      R0,#+768
   \   00000038   0x9002             STR      R0,[SP, #+8]
    298          	gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0xF88D 0x0010      STRB     R0,[SP, #+16]
    299          	gpio_init_struct.GPIO_Output = OUTPUT_H;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0xF88D 0x0011      STRB     R0,[SP, #+17]
    300          	gpio_init_struct.GPIO_PinControl = IRQC_DIS;
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x9003             STR      R0,[SP, #+12]
    301          	LPLD_GPIO_Init(gpio_init_struct);
   \   0000004A   0xA901             ADD      R1,SP,#+4
   \   0000004C   0xB084             SUB      SP,SP,#+16
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x2214             MOVS     R2,#+20
   \   00000052   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000056   0xBC0F             POP      {R0-R3}
   \   00000058   0x.... 0x....      BL       LPLD_GPIO_Init
    302          }
   \   0000005C   0xB007             ADD      SP,SP,#+28
   \   0000005E   0xBD00             POP      {PC}             ;; return
    303          
    304          
    305          //初始化SSD1306

   \                                 In section .text, align 2, keep-with-next
    306          void OLED_Init(void)
    307          {
   \                     OLED_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    308          
    309          
    310          	OLED_PinInit();
   \   00000002   0x.... 0x....      BL       OLED_PinInit
    311          	OLED_RST_Set();
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2116             MOVS     R1,#+22
   \   0000000A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff040
   \   0000000C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    312          	delay_ms(100);
   \   00000010   0x2064             MOVS     R0,#+100
   \   00000012   0x.... 0x....      BL       delay_ms
    313          	OLED_RST_Clr();
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x2116             MOVS     R1,#+22
   \   0000001A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff040
   \   0000001C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    314          	delay_ms(100);
   \   00000020   0x2064             MOVS     R0,#+100
   \   00000022   0x.... 0x....      BL       delay_ms
    315          	OLED_RST_Set();
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0x2116             MOVS     R1,#+22
   \   0000002A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff040
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    316          	/*
    317          	OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
    318          	OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
    319          	OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
    320          	OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
    321          	OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
    322          	OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
    323          	OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
    324          	OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
    325          	OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
    326          	OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
    327          	OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
    328          	OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
    329          	OLED_WR_Byte(0x00,OLED_CMD);//-not offset
    330          	OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
    331          	OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
    332          	OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
    333          	OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
    334          	OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
    335          	OLED_WR_Byte(0x12,OLED_CMD);
    336          	OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
    337          	OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
    338          	OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
    339          	OLED_WR_Byte(0x02,OLED_CMD);//
    340          	OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
    341          	OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
    342          	OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
    343          	OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7)
    344          	OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
    345          	*/
    346          
    347          	OLED_WR_Byte(0xAE, OLED_CMD);//--turn off oled panel
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x20AE             MOVS     R0,#+174
   \   00000034   0x.... 0x....      BL       OLED_WR_Byte
    348          	OLED_WR_Byte(0x00, OLED_CMD);//---set low column address
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      BL       OLED_WR_Byte
    349          	OLED_WR_Byte(0x10, OLED_CMD);//---set high column address
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x2010             MOVS     R0,#+16
   \   00000044   0x.... 0x....      BL       OLED_WR_Byte
    350          	OLED_WR_Byte(0x40, OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x2040             MOVS     R0,#+64
   \   0000004C   0x.... 0x....      BL       OLED_WR_Byte
    351          	OLED_WR_Byte(0x81, OLED_CMD);//--set contrast control register
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x2081             MOVS     R0,#+129
   \   00000054   0x.... 0x....      BL       OLED_WR_Byte
    352          	OLED_WR_Byte(0xCF, OLED_CMD); // Set SEG Output Current Brightness
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x20CF             MOVS     R0,#+207
   \   0000005C   0x.... 0x....      BL       OLED_WR_Byte
    353          	OLED_WR_Byte(0xA1, OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x20A1             MOVS     R0,#+161
   \   00000064   0x.... 0x....      BL       OLED_WR_Byte
    354          	OLED_WR_Byte(0xC8, OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x20C8             MOVS     R0,#+200
   \   0000006C   0x.... 0x....      BL       OLED_WR_Byte
    355          	OLED_WR_Byte(0xA6, OLED_CMD);//--set normal display
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x20A6             MOVS     R0,#+166
   \   00000074   0x.... 0x....      BL       OLED_WR_Byte
    356          	OLED_WR_Byte(0xA8, OLED_CMD);//--set multiplex ratio(1 to 64)
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x20A8             MOVS     R0,#+168
   \   0000007C   0x.... 0x....      BL       OLED_WR_Byte
    357          	OLED_WR_Byte(0x3f, OLED_CMD);//--1/64 duty
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x203F             MOVS     R0,#+63
   \   00000084   0x.... 0x....      BL       OLED_WR_Byte
    358          	OLED_WR_Byte(0xD3, OLED_CMD);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x20D3             MOVS     R0,#+211
   \   0000008C   0x.... 0x....      BL       OLED_WR_Byte
    359          	OLED_WR_Byte(0x00, OLED_CMD);//-not offset
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       OLED_WR_Byte
    360          	OLED_WR_Byte(0xd5, OLED_CMD);//--set display clock divide ratio/oscillator frequency
   \   00000098   0x2100             MOVS     R1,#+0
   \   0000009A   0x20D5             MOVS     R0,#+213
   \   0000009C   0x.... 0x....      BL       OLED_WR_Byte
    361          	OLED_WR_Byte(0x80, OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x2080             MOVS     R0,#+128
   \   000000A4   0x.... 0x....      BL       OLED_WR_Byte
    362          	OLED_WR_Byte(0xD9, OLED_CMD);//--set pre-charge period
   \   000000A8   0x2100             MOVS     R1,#+0
   \   000000AA   0x20D9             MOVS     R0,#+217
   \   000000AC   0x.... 0x....      BL       OLED_WR_Byte
    363          	OLED_WR_Byte(0xF1, OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x20F1             MOVS     R0,#+241
   \   000000B4   0x.... 0x....      BL       OLED_WR_Byte
    364          	OLED_WR_Byte(0xDA, OLED_CMD);//--set com pins hardware configuration
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x20DA             MOVS     R0,#+218
   \   000000BC   0x.... 0x....      BL       OLED_WR_Byte
    365          	OLED_WR_Byte(0x12, OLED_CMD);
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x2012             MOVS     R0,#+18
   \   000000C4   0x.... 0x....      BL       OLED_WR_Byte
    366          	OLED_WR_Byte(0xDB, OLED_CMD);//--set vcomh
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x20DB             MOVS     R0,#+219
   \   000000CC   0x.... 0x....      BL       OLED_WR_Byte
    367          	OLED_WR_Byte(0x40, OLED_CMD);//Set VCOM Deselect Level
   \   000000D0   0x2100             MOVS     R1,#+0
   \   000000D2   0x2040             MOVS     R0,#+64
   \   000000D4   0x.... 0x....      BL       OLED_WR_Byte
    368          	OLED_WR_Byte(0x01, OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x2001             MOVS     R0,#+1
   \   000000DC   0x.... 0x....      BL       OLED_WR_Byte
    369          	OLED_WR_Byte(0x02, OLED_CMD);//
   \   000000E0   0x2100             MOVS     R1,#+0
   \   000000E2   0x2002             MOVS     R0,#+2
   \   000000E4   0x.... 0x....      BL       OLED_WR_Byte
    370          	OLED_WR_Byte(0x8D, OLED_CMD);//--set Charge Pump enable/disable
   \   000000E8   0x2100             MOVS     R1,#+0
   \   000000EA   0x208D             MOVS     R0,#+141
   \   000000EC   0x.... 0x....      BL       OLED_WR_Byte
    371          	OLED_WR_Byte(0x14, OLED_CMD);//--set(0x10) disable
   \   000000F0   0x2100             MOVS     R1,#+0
   \   000000F2   0x2014             MOVS     R0,#+20
   \   000000F4   0x.... 0x....      BL       OLED_WR_Byte
    372          	OLED_WR_Byte(0xA4, OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
   \   000000F8   0x2100             MOVS     R1,#+0
   \   000000FA   0x20A4             MOVS     R0,#+164
   \   000000FC   0x.... 0x....      BL       OLED_WR_Byte
    373          	OLED_WR_Byte(0xA6, OLED_CMD);// Disable Inverse Display On (0xa6/a7)
   \   00000100   0x2100             MOVS     R1,#+0
   \   00000102   0x20A6             MOVS     R0,#+166
   \   00000104   0x.... 0x....      BL       OLED_WR_Byte
    374          	OLED_WR_Byte(0xAF, OLED_CMD);//--turn on oled panel
   \   00000108   0x2100             MOVS     R1,#+0
   \   0000010A   0x20AF             MOVS     R0,#+175
   \   0000010C   0x.... 0x....      BL       OLED_WR_Byte
    375          
    376          	OLED_WR_Byte(0xAF, OLED_CMD); /*display ON*/
   \   00000110   0x2100             MOVS     R1,#+0
   \   00000112   0x20AF             MOVS     R0,#+175
   \   00000114   0x.... 0x....      BL       OLED_WR_Byte
    377          }
   \   00000118   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     ??imgMap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     F6x8
    378          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   OLED_Clear
        16   -> OLED_WR_Byte
       8   OLED_ClearLine
         8   -> OLED_Set_Pos
         8   -> OLED_WR_Byte
       8   OLED_Display_Off
         8   -> OLED_WR_Byte
       8   OLED_Display_On
         8   -> OLED_WR_Byte
      32   OLED_DrawBMP
        32   -> OLED_Set_Pos
        32   -> OLED_WR_Byte
      16   OLED_DrawPoint
        16   -> OLED_Set_Pos
        16   -> OLED_WR_Byte
       8   OLED_Init
         8   -> LPLD_GPIO_Output_b
         8   -> OLED_PinInit
         8   -> OLED_WR_Byte
         8   -> delay_ms
      24   OLED_NumClear
        24   -> OLED_ShowChar
      48   OLED_PinInit
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
       8   OLED_Set_Pos
         8   -> OLED_WR_Byte
      16   OLED_ShowChar
        16   -> OLED_Set_Pos
        16   -> OLED_WR_Byte
      32   OLED_ShowNum
        32   -> OLED_ShowChar
        32   -> oled_pow
      24   OLED_ShowString
        24   -> OLED_ShowChar
      16   OLED_WR_Byte
        16   -> LPLD_GPIO_Output_b
       0   delay_ms
       0   oled_pow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
     552  F6x8
    1520  F8X16
      64  OLED_Clear
      36  OLED_ClearLine
      28  OLED_Display_Off
      28  OLED_Display_On
      80  OLED_DrawBMP
     194  OLED_DrawPoint
     282  OLED_Init
      48  OLED_NumClear
      96  OLED_PinInit
      44  OLED_Set_Pos
      64  OLED_ShowChar
     206  OLED_ShowNum
      52  OLED_ShowString
     154  OLED_WR_Byte
      22  delay_ms
    1024  imgMap
      22  oled_pow

 
 1 024 bytes in section .bss
 2 072 bytes in section .rodata
 1 436 bytes in section .text
 
 1 436 bytes of CODE  memory
 2 072 bytes of CONST memory
 1 024 bytes of DATA  memory

Errors: none
Warnings: none
